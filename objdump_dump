In archive librt.a:

aio_cancel.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <aio_cancel>:
   0:	41 54                	push   %r12
   2:	31 c0                	xor    %eax,%eax
   4:	55                   	push   %rbp
   5:	48 89 f5             	mov    %rsi,%rbp
   8:	be 03 00 00 00       	mov    $0x3,%esi
   d:	53                   	push   %rbx
   e:	89 fb                	mov    %edi,%ebx
  10:	e8 00 00 00 00       	callq  15 <aio_cancel+0x15>
  15:	85 c0                	test   %eax,%eax
  17:	0f 88 86 01 00 00    	js     1a3 <aio_cancel+0x1a3>
  1d:	bf 00 00 00 00       	mov    $0x0,%edi
  22:	e8 00 00 00 00       	callq  27 <aio_cancel+0x27>
  27:	48 85 ed             	test   %rbp,%rbp
  2a:	0f 84 0a 01 00 00    	je     13a <aio_cancel+0x13a>
  30:	8b 7d 00             	mov    0x0(%rbp),%edi
  33:	39 df                	cmp    %ebx,%edi
  35:	0f 85 dd 00 00 00    	jne    118 <aio_cancel+0x118>
  3b:	83 7d 70 73          	cmpl   $0x73,0x70(%rbp)
  3f:	74 18                	je     59 <aio_cancel+0x59>
  41:	41 bc 02 00 00 00    	mov    $0x2,%r12d
  47:	bf 00 00 00 00       	mov    $0x0,%edi
  4c:	e8 00 00 00 00       	callq  51 <aio_cancel+0x51>
  51:	44 89 e0             	mov    %r12d,%eax
  54:	5b                   	pop    %rbx
  55:	5d                   	pop    %rbp
  56:	41 5c                	pop    %r12
  58:	c3                   	retq   
  59:	e8 00 00 00 00       	callq  5e <aio_cancel+0x5e>
  5e:	48 85 c0             	test   %rax,%rax
  61:	48 89 c3             	mov    %rax,%rbx
  64:	0f 84 ae 00 00 00    	je     118 <aio_cancel+0x118>
  6a:	31 ff                	xor    %edi,%edi
  6c:	eb 15                	jmp    83 <aio_cancel+0x83>
  6e:	66 90                	xchg   %ax,%ax
  70:	48 8b 43 18          	mov    0x18(%rbx),%rax
  74:	48 85 c0             	test   %rax,%rax
  77:	0f 84 9b 00 00 00    	je     118 <aio_cancel+0x118>
  7d:	48 89 df             	mov    %rbx,%rdi
  80:	48 89 c3             	mov    %rax,%rbx
  83:	48 39 6b 28          	cmp    %rbp,0x28(%rbx)
  87:	75 e7                	jne    70 <aio_cancel+0x70>
  89:	83 3b 03             	cmpl   $0x3,(%rbx)
  8c:	0f 84 d7 00 00 00    	je     169 <aio_cancel+0x169>
  92:	31 d2                	xor    %edx,%edx
  94:	48 89 de             	mov    %rbx,%rsi
  97:	45 31 e4             	xor    %r12d,%r12d
  9a:	e8 00 00 00 00       	callq  9f <aio_cancel+0x9f>
  9f:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
  a6:	00 
  a7:	8b 03                	mov    (%rbx),%eax
  a9:	83 e8 01             	sub    $0x1,%eax
  ac:	83 f8 01             	cmp    $0x1,%eax
  af:	76 0a                	jbe    bb <aio_cancel+0xbb>
  b1:	eb 47                	jmp    fa <aio_cancel+0xfa>
  b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  b8:	48 89 eb             	mov    %rbp,%rbx
  bb:	48 8b 53 28          	mov    0x28(%rbx),%rdx
  bf:	48 89 df             	mov    %rbx,%rdi
  c2:	c7 42 70 7d 00 00 00 	movl   $0x7d,0x70(%rdx)
  c9:	48 8b 53 28          	mov    0x28(%rbx),%rdx
  cd:	48 c7 42 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%rdx)
  d4:	ff 
  d5:	e8 00 00 00 00       	callq  da <aio_cancel+0xda>
  da:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
  de:	48 89 df             	mov    %rbx,%rdi
  e1:	e8 00 00 00 00       	callq  e6 <aio_cancel+0xe6>
  e6:	48 85 ed             	test   %rbp,%rbp
  e9:	0f 84 58 ff ff ff    	je     47 <aio_cancel+0x47>
  ef:	8b 45 00             	mov    0x0(%rbp),%eax
  f2:	8d 50 ff             	lea    -0x1(%rax),%edx
  f5:	83 fa 01             	cmp    $0x1,%edx
  f8:	76 be                	jbe    b8 <aio_cancel+0xb8>
  fa:	b9 00 00 00 00       	mov    $0x0,%ecx
  ff:	ba 8f 00 00 00       	mov    $0x8f,%edx
 104:	be 00 00 00 00       	mov    $0x0,%esi
 109:	bf 00 00 00 00       	mov    $0x0,%edi
 10e:	e8 00 00 00 00       	callq  113 <aio_cancel+0x113>
 113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 118:	bf 00 00 00 00       	mov    $0x0,%edi
 11d:	e8 00 00 00 00       	callq  122 <aio_cancel+0x122>
 122:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 129 <aio_cancel+0x129>
 129:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
 130:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 135:	e9 1a ff ff ff       	jmpq   54 <aio_cancel+0x54>
 13a:	89 df                	mov    %ebx,%edi
 13c:	e8 00 00 00 00       	callq  141 <aio_cancel+0x141>
 141:	48 85 c0             	test   %rax,%rax
 144:	48 89 c3             	mov    %rax,%rbx
 147:	0f 84 f4 fe ff ff    	je     41 <aio_cancel+0x41>
 14d:	83 38 03             	cmpl   $0x3,(%rax)
 150:	74 22                	je     174 <aio_cancel+0x174>
 152:	ba 01 00 00 00       	mov    $0x1,%edx
 157:	48 89 c6             	mov    %rax,%rsi
 15a:	31 ff                	xor    %edi,%edi
 15c:	e8 00 00 00 00       	callq  161 <aio_cancel+0x161>
 161:	45 31 e4             	xor    %r12d,%r12d
 164:	e9 3e ff ff ff       	jmpq   a7 <aio_cancel+0xa7>
 169:	41 bc 01 00 00 00    	mov    $0x1,%r12d
 16f:	e9 d3 fe ff ff       	jmpq   47 <aio_cancel+0x47>
 174:	48 8b 68 18          	mov    0x18(%rax),%rbp
 178:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
 17f:	00 
 180:	48 85 ed             	test   %rbp,%rbp
 183:	74 e4                	je     169 <aio_cancel+0x169>
 185:	ba 01 00 00 00       	mov    $0x1,%edx
 18a:	48 89 ee             	mov    %rbp,%rsi
 18d:	48 89 c7             	mov    %rax,%rdi
 190:	e8 00 00 00 00       	callq  195 <aio_cancel+0x195>
 195:	48 89 eb             	mov    %rbp,%rbx
 198:	41 bc 01 00 00 00    	mov    $0x1,%r12d
 19e:	e9 04 ff ff ff       	jmpq   a7 <aio_cancel+0xa7>
 1a3:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1aa <aio_cancel+0x1aa>
 1aa:	64 c7 00 09 00 00 00 	movl   $0x9,%fs:(%rax)
 1b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 1b6:	e9 99 fe ff ff       	jmpq   54 <aio_cancel+0x54>

aio_error.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <aio_error>:
   0:	8b 47 70             	mov    0x70(%rdi),%eax
   3:	c3                   	retq   

aio_fsync.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <aio_fsync>:
   0:	81 ff 00 10 00 00    	cmp    $0x1000,%edi
   6:	53                   	push   %rbx
   7:	48 89 f3             	mov    %rsi,%rbx
   a:	74 35                	je     41 <aio_fsync+0x41>
   c:	81 ff 00 10 10 00    	cmp    $0x101000,%edi
  12:	75 1a                	jne    2e <aio_fsync+0x2e>
  14:	8b 3b                	mov    (%rbx),%edi
  16:	31 c0                	xor    %eax,%eax
  18:	be 03 00 00 00       	mov    $0x3,%esi
  1d:	e8 00 00 00 00       	callq  22 <aio_fsync+0x22>
  22:	83 c0 01             	add    $0x1,%eax
  25:	74 47                	je     6e <aio_fsync+0x6e>
  27:	be 04 00 00 00       	mov    $0x4,%esi
  2c:	eb 2b                	jmp    59 <aio_fsync+0x59>
  2e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 35 <aio_fsync+0x35>
  35:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
  3c:	83 c8 ff             	or     $0xffffffff,%eax
  3f:	5b                   	pop    %rbx
  40:	c3                   	retq   
  41:	8b 3b                	mov    (%rbx),%edi
  43:	31 c0                	xor    %eax,%eax
  45:	be 03 00 00 00       	mov    $0x3,%esi
  4a:	e8 00 00 00 00       	callq  4f <aio_fsync+0x4f>
  4f:	83 c0 01             	add    $0x1,%eax
  52:	74 1a                	je     6e <aio_fsync+0x6e>
  54:	be 03 00 00 00       	mov    $0x3,%esi
  59:	48 89 df             	mov    %rbx,%rdi
  5c:	e8 00 00 00 00       	callq  61 <aio_fsync+0x61>
  61:	48 85 c0             	test   %rax,%rax
  64:	0f 94 c0             	sete   %al
  67:	0f b6 c0             	movzbl %al,%eax
  6a:	f7 d8                	neg    %eax
  6c:	5b                   	pop    %rbx
  6d:	c3                   	retq   
  6e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 75 <aio_fsync+0x75>
  75:	64 c7 00 09 00 00 00 	movl   $0x9,%fs:(%rax)
  7c:	83 c8 ff             	or     $0xffffffff,%eax
  7f:	5b                   	pop    %rbx
  80:	c3                   	retq   

aio_misc.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <handle_fildes_io>:
   0:	41 56                	push   %r14
   2:	41 55                	push   %r13
   4:	41 54                	push   %r12
   6:	55                   	push   %rbp
   7:	48 89 fd             	mov    %rdi,%rbp
   a:	53                   	push   %rbx
   b:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   f:	e8 00 00 00 00       	callq  14 <handle_fildes_io+0x14>
  14:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  19:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
  1e:	48 89 c7             	mov    %rax,%rdi
  21:	49 89 c5             	mov    %rax,%r13
  24:	e8 00 00 00 00       	callq  29 <handle_fildes_io+0x29>
  29:	48 85 ed             	test   %rbp,%rbp
  2c:	0f 84 bb 01 00 00    	je     1ed <handle_fildes_io+0x1ed>
  32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  38:	83 7d 00 03          	cmpl   $0x3,0x0(%rbp)
  3c:	0f 85 05 05 00 00    	jne    547 <handle_fildes_io+0x547>
  42:	48 8b 5d 28          	mov    0x28(%rbp),%rbx
  46:	8b 43 68             	mov    0x68(%rbx),%eax
  49:	3b 44 24 10          	cmp    0x10(%rsp),%eax
  4d:	44 8b 33             	mov    (%rbx),%r14d
  50:	8b 73 6c             	mov    0x6c(%rbx),%esi
  53:	75 06                	jne    5b <handle_fildes_io+0x5b>
  55:	3b 74 24 20          	cmp    0x20(%rsp),%esi
  59:	74 15                	je     70 <handle_fildes_io+0x70>
  5b:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  60:	4c 89 ef             	mov    %r13,%rdi
  63:	89 44 24 10          	mov    %eax,0x10(%rsp)
  67:	89 74 24 20          	mov    %esi,0x20(%rsp)
  6b:	e8 00 00 00 00       	callq  70 <handle_fildes_io+0x70>
  70:	8b 43 04             	mov    0x4(%rbx),%eax
  73:	89 c2                	mov    %eax,%edx
  75:	83 e2 7f             	and    $0x7f,%edx
  78:	0f 84 37 02 00 00    	je     2b5 <handle_fildes_io+0x2b5>
  7e:	83 fa 01             	cmp    $0x1,%edx
  81:	0f 84 6e 02 00 00    	je     2f5 <handle_fildes_io+0x2f5>
  87:	83 f8 03             	cmp    $0x3,%eax
  8a:	0f 84 95 02 00 00    	je     325 <handle_fildes_io+0x325>
  90:	83 f8 04             	cmp    $0x4,%eax
  93:	0f 84 b4 02 00 00    	je     34d <handle_fildes_io+0x34d>
  99:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # a0 <handle_fildes_io+0xa0>
  a0:	48 c7 43 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%rbx)
  a7:	ff 
  a8:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
  af:	90                   	nop
  b0:	bf 00 00 00 00       	mov    $0x0,%edi
  b5:	e8 00 00 00 00       	callq  ba <handle_fildes_io+0xba>
  ba:	31 c0                	xor    %eax,%eax
  bc:	48 83 7b 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbx)
  c1:	0f 84 69 03 00 00    	je     430 <handle_fildes_io+0x430>
  c7:	89 43 70             	mov    %eax,0x70(%rbx)
  ca:	48 89 ef             	mov    %rbp,%rdi
  cd:	e8 00 00 00 00       	callq  d2 <handle_fildes_io+0xd2>
  d2:	83 7d 00 03          	cmpl   $0x3,0x0(%rbp)
  d6:	0f 85 9d 04 00 00    	jne    579 <handle_fildes_io+0x579>
  dc:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
  e0:	c7 45 00 04 00 00 00 	movl   $0x4,0x0(%rbp)
  e7:	48 8b 45 08          	mov    0x8(%rbp),%rax
  eb:	48 85 c9             	test   %rcx,%rcx
  ee:	0f 84 8c 03 00 00    	je     480 <handle_fildes_io+0x480>
  f4:	48 85 c0             	test   %rax,%rax
  f7:	0f 84 b3 03 00 00    	je     4b0 <handle_fildes_io+0x4b0>
  fd:	48 89 48 10          	mov    %rcx,0x10(%rax)
 101:	48 8b 55 10          	mov    0x10(%rbp),%rdx
 105:	48 85 d2             	test   %rdx,%rdx
 108:	74 08                	je     112 <handle_fildes_io+0x112>
 10a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 10e:	48 8b 45 08          	mov    0x8(%rbp),%rax
 112:	c7 01 02 00 00 00    	movl   $0x2,(%rcx)
 118:	83 7d 00 02          	cmpl   $0x2,0x0(%rbp)
 11c:	48 89 41 08          	mov    %rax,0x8(%rcx)
 120:	48 89 51 10          	mov    %rdx,0x10(%rcx)
 124:	0f 84 46 02 00 00    	je     370 <handle_fildes_io+0x370>
 12a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 131 <handle_fildes_io+0x131>
 131:	48 85 c9             	test   %rcx,%rcx
 134:	49 89 c0             	mov    %rax,%r8
 137:	74 47                	je     180 <handle_fildes_io+0x180>
 139:	48 8b 41 28          	mov    0x28(%rcx),%rax
 13d:	4d 85 c0             	test   %r8,%r8
 140:	8b 78 68             	mov    0x68(%rax),%edi
 143:	0f 84 77 02 00 00    	je     3c0 <handle_fildes_io+0x3c0>
 149:	49 8b 50 28          	mov    0x28(%r8),%rdx
 14d:	4c 89 c0             	mov    %r8,%rax
 150:	3b 7a 68             	cmp    0x68(%rdx),%edi
 153:	7e 17                	jle    16c <handle_fildes_io+0x16c>
 155:	e9 66 02 00 00       	jmpq   3c0 <handle_fildes_io+0x3c0>
 15a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 160:	48 8b 72 28          	mov    0x28(%rdx),%rsi
 164:	3b 7e 68             	cmp    0x68(%rsi),%edi
 167:	7f 0c                	jg     175 <handle_fildes_io+0x175>
 169:	48 89 d0             	mov    %rdx,%rax
 16c:	48 8b 50 20          	mov    0x20(%rax),%rdx
 170:	48 85 d2             	test   %rdx,%rdx
 173:	75 eb                	jne    160 <handle_fildes_io+0x160>
 175:	48 89 51 20          	mov    %rdx,0x20(%rcx)
 179:	48 89 48 20          	mov    %rcx,0x20(%rax)
 17d:	4c 89 c0             	mov    %r8,%rax
 180:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 187 <handle_fildes_io+0x187>
 187:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
 18e:	48 89 2d 00 00 00 00 	mov    %rbp,0x0(%rip)        # 195 <handle_fildes_io+0x195>
 195:	48 89 55 18          	mov    %rdx,0x18(%rbp)
 199:	48 89 c5             	mov    %rax,%rbp
 19c:	48 85 ed             	test   %rbp,%rbp
 19f:	74 67                	je     208 <handle_fildes_io+0x208>
 1a1:	83 7d 00 02          	cmpl   $0x2,0x0(%rbp)
 1a5:	0f 85 b5 03 00 00    	jne    560 <handle_fildes_io+0x560>
 1ab:	48 8b 45 20          	mov    0x20(%rbp),%rax
 1af:	c7 45 00 03 00 00 00 	movl   $0x3,0x0(%rbp)
 1b6:	48 85 c0             	test   %rax,%rax
 1b9:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1c0 <handle_fildes_io+0x1c0>
 1c0:	74 18                	je     1da <handle_fildes_io+0x1da>
 1c2:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1c8 <handle_fildes_io+0x1c8>
 1c8:	85 c0                	test   %eax,%eax
 1ca:	0f 8e 08 02 00 00    	jle    3d8 <handle_fildes_io+0x3d8>
 1d0:	bf 00 00 00 00       	mov    $0x0,%edi
 1d5:	e8 00 00 00 00       	callq  1da <handle_fildes_io+0x1da>
 1da:	bf 00 00 00 00       	mov    $0x0,%edi
 1df:	e8 00 00 00 00       	callq  1e4 <handle_fildes_io+0x1e4>
 1e4:	48 85 ed             	test   %rbp,%rbp
 1e7:	0f 85 4b fe ff ff    	jne    38 <handle_fildes_io+0x38>
 1ed:	bf 00 00 00 00       	mov    $0x0,%edi
 1f2:	e8 00 00 00 00       	callq  1f7 <handle_fildes_io+0x1f7>
 1f7:	48 8b 2d 00 00 00 00 	mov    0x0(%rip),%rbp        # 1fe <handle_fildes_io+0x1fe>
 1fe:	48 85 ed             	test   %rbp,%rbp
 201:	75 9e                	jne    1a1 <handle_fildes_io+0x1a1>
 203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 208:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 20e <handle_fildes_io+0x20e>
 20e:	85 c9                	test   %ecx,%ecx
 210:	78 6d                	js     27f <handle_fildes_io+0x27f>
 212:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
 217:	31 f6                	xor    %esi,%esi
 219:	83 05 00 00 00 00 01 	addl   $0x1,0x0(%rip)        # 220 <handle_fildes_io+0x220>
 220:	e8 00 00 00 00       	callq  225 <handle_fildes_io+0x225>
 225:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
 22a:	48 63 05 00 00 00 00 	movslq 0x0(%rip),%rax        # 231 <handle_fildes_io+0x231>
 231:	48 03 44 24 30       	add    0x30(%rsp),%rax
 236:	48 69 d2 e8 03 00 00 	imul   $0x3e8,%rdx,%rdx
 23d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
 242:	48 81 fa ff c9 9a 3b 	cmp    $0x3b9ac9ff,%rdx
 249:	0f 8f ac 02 00 00    	jg     4fb <handle_fildes_io+0x4fb>
 24f:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
 254:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
 259:	be 00 00 00 00       	mov    $0x0,%esi
 25e:	bf 00 00 00 00       	mov    $0x0,%edi
 263:	e8 00 00 00 00       	callq  268 <handle_fildes_io+0x268>
 268:	48 8b 2d 00 00 00 00 	mov    0x0(%rip),%rbp        # 26f <handle_fildes_io+0x26f>
 26f:	83 2d 00 00 00 00 01 	subl   $0x1,0x0(%rip)        # 276 <handle_fildes_io+0x276>
 276:	48 85 ed             	test   %rbp,%rbp
 279:	0f 85 22 ff ff ff    	jne    1a1 <handle_fildes_io+0x1a1>
 27f:	bf 00 00 00 00       	mov    $0x0,%edi
 284:	83 2d 00 00 00 00 01 	subl   $0x1,0x0(%rip)        # 28b <handle_fildes_io+0x28b>
 28b:	e8 00 00 00 00       	callq  290 <handle_fildes_io+0x290>
 290:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
 294:	31 c0                	xor    %eax,%eax
 296:	5b                   	pop    %rbx
 297:	5d                   	pop    %rbp
 298:	41 5c                	pop    %r12
 29a:	41 5d                	pop    %r13
 29c:	41 5e                	pop    %r14
 29e:	c3                   	retq   
 29f:	90                   	nop
 2a0:	4c 8b 25 00 00 00 00 	mov    0x0(%rip),%r12        # 2a7 <handle_fildes_io+0x2a7>
 2a7:	64 41 8b 14 24       	mov    %fs:(%r12),%edx
 2ac:	83 fa 04             	cmp    $0x4,%edx
 2af:	0f 85 8b 01 00 00    	jne    440 <handle_fildes_io+0x440>
 2b5:	48 8b 8b 80 00 00 00 	mov    0x80(%rbx),%rcx
 2bc:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 2c0:	44 89 f7             	mov    %r14d,%edi
 2c3:	48 8b 73 10          	mov    0x10(%rbx),%rsi
 2c7:	e8 00 00 00 00       	callq  2cc <handle_fildes_io+0x2cc>
 2cc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
 2d0:	74 ce                	je     2a0 <handle_fildes_io+0x2a0>
 2d2:	48 89 43 78          	mov    %rax,0x78(%rbx)
 2d6:	e9 d5 fd ff ff       	jmpq   b0 <handle_fildes_io+0xb0>
 2db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 2e0:	4c 8b 25 00 00 00 00 	mov    0x0(%rip),%r12        # 2e7 <handle_fildes_io+0x2e7>
 2e7:	64 41 8b 14 24       	mov    %fs:(%r12),%edx
 2ec:	83 fa 04             	cmp    $0x4,%edx
 2ef:	0f 85 cb 01 00 00    	jne    4c0 <handle_fildes_io+0x4c0>
 2f5:	48 8b 8b 80 00 00 00 	mov    0x80(%rbx),%rcx
 2fc:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 300:	44 89 f7             	mov    %r14d,%edi
 303:	48 8b 73 10          	mov    0x10(%rbx),%rsi
 307:	e8 00 00 00 00       	callq  30c <handle_fildes_io+0x30c>
 30c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
 310:	74 ce                	je     2e0 <handle_fildes_io+0x2e0>
 312:	eb be                	jmp    2d2 <handle_fildes_io+0x2d2>
 314:	0f 1f 40 00          	nopl   0x0(%rax)
 318:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 31f <handle_fildes_io+0x31f>
 31f:	64 83 3a 04          	cmpl   $0x4,%fs:(%rdx)
 323:	75 ad                	jne    2d2 <handle_fildes_io+0x2d2>
 325:	44 89 f7             	mov    %r14d,%edi
 328:	e8 00 00 00 00       	callq  32d <handle_fildes_io+0x32d>
 32d:	48 98                	cltq   
 32f:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
 333:	74 e3                	je     318 <handle_fildes_io+0x318>
 335:	48 89 43 78          	mov    %rax,0x78(%rbx)
 339:	e9 72 fd ff ff       	jmpq   b0 <handle_fildes_io+0xb0>
 33e:	66 90                	xchg   %ax,%ax
 340:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 347 <handle_fildes_io+0x347>
 347:	64 83 3a 04          	cmpl   $0x4,%fs:(%rdx)
 34b:	75 85                	jne    2d2 <handle_fildes_io+0x2d2>
 34d:	44 89 f7             	mov    %r14d,%edi
 350:	e8 00 00 00 00       	callq  355 <handle_fildes_io+0x355>
 355:	48 98                	cltq   
 357:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
 35b:	74 e3                	je     340 <handle_fildes_io+0x340>
 35d:	48 89 43 78          	mov    %rax,0x78(%rbx)
 361:	e9 4a fd ff ff       	jmpq   b0 <handle_fildes_io+0xb0>
 366:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 36d:	00 00 00 
 370:	4c 8b 05 00 00 00 00 	mov    0x0(%rip),%r8        # 377 <handle_fildes_io+0x377>
 377:	4d 85 c0             	test   %r8,%r8
 37a:	0f 84 bf 01 00 00    	je     53f <handle_fildes_io+0x53f>
 380:	4c 39 c5             	cmp    %r8,%rbp
 383:	4c 89 c0             	mov    %r8,%rax
 386:	75 0b                	jne    393 <handle_fildes_io+0x393>
 388:	e9 96 01 00 00       	jmpq   523 <handle_fildes_io+0x523>
 38d:	0f 1f 00             	nopl   (%rax)
 390:	48 89 d0             	mov    %rdx,%rax
 393:	48 8b 50 20          	mov    0x20(%rax),%rdx
 397:	48 85 d2             	test   %rdx,%rdx
 39a:	0f 84 99 fd ff ff    	je     139 <handle_fildes_io+0x139>
 3a0:	48 39 d5             	cmp    %rdx,%rbp
 3a3:	75 eb                	jne    390 <handle_fildes_io+0x390>
 3a5:	48 8b 55 20          	mov    0x20(%rbp),%rdx
 3a9:	4d 85 c0             	test   %r8,%r8
 3ac:	48 89 50 20          	mov    %rdx,0x20(%rax)
 3b0:	48 8b 41 28          	mov    0x28(%rcx),%rax
 3b4:	8b 78 68             	mov    0x68(%rax),%edi
 3b7:	0f 85 8c fd ff ff    	jne    149 <handle_fildes_io+0x149>
 3bd:	0f 1f 00             	nopl   (%rax)
 3c0:	4c 89 41 20          	mov    %r8,0x20(%rcx)
 3c4:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 3cb <handle_fildes_io+0x3cb>
 3cb:	48 89 c8             	mov    %rcx,%rax
 3ce:	e9 ad fd ff ff       	jmpq   180 <handle_fildes_io+0x180>
 3d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 3d8:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3de <handle_fildes_io+0x3de>
 3de:	39 05 00 00 00 00    	cmp    %eax,0x0(%rip)        # 3e4 <handle_fildes_io+0x3e4>
 3e4:	0f 8e f0 fd ff ff    	jle    1da <handle_fildes_io+0x1da>
 3ea:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
 3ef:	e8 00 00 00 00       	callq  3f4 <handle_fildes_io+0x3f4>
 3f4:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
 3f9:	be 01 00 00 00       	mov    $0x1,%esi
 3fe:	e8 00 00 00 00       	callq  403 <handle_fildes_io+0x403>
 403:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
 408:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
 40d:	31 c9                	xor    %ecx,%ecx
 40f:	ba 00 00 00 00       	mov    $0x0,%edx
 414:	e8 00 00 00 00       	callq  419 <handle_fildes_io+0x419>
 419:	85 c0                	test   %eax,%eax
 41b:	0f 85 b9 fd ff ff    	jne    1da <handle_fildes_io+0x1da>
 421:	83 05 00 00 00 00 01 	addl   $0x1,0x0(%rip)        # 428 <handle_fildes_io+0x428>
 428:	e9 ad fd ff ff       	jmpq   1da <handle_fildes_io+0x1da>
 42d:	0f 1f 00             	nopl   (%rax)
 430:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 437 <handle_fildes_io+0x437>
 437:	64 8b 00             	mov    %fs:(%rax),%eax
 43a:	e9 88 fc ff ff       	jmpq   c7 <handle_fildes_io+0xc7>
 43f:	90                   	nop
 440:	83 fa 1d             	cmp    $0x1d,%edx
 443:	48 89 43 78          	mov    %rax,0x78(%rbx)
 447:	0f 85 63 fc ff ff    	jne    b0 <handle_fildes_io+0xb0>
 44d:	eb 0d                	jmp    45c <handle_fildes_io+0x45c>
 44f:	90                   	nop
 450:	64 41 83 3c 24 04    	cmpl   $0x4,%fs:(%r12)
 456:	0f 85 76 fe ff ff    	jne    2d2 <handle_fildes_io+0x2d2>
 45c:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 460:	48 8b 73 10          	mov    0x10(%rbx),%rsi
 464:	44 89 f7             	mov    %r14d,%edi
 467:	e8 00 00 00 00       	callq  46c <handle_fildes_io+0x46c>
 46c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
 470:	74 de                	je     450 <handle_fildes_io+0x450>
 472:	48 89 43 78          	mov    %rax,0x78(%rbx)
 476:	e9 35 fc ff ff       	jmpq   b0 <handle_fildes_io+0xb0>
 47b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 480:	48 85 c0             	test   %rax,%rax
 483:	48 8b 55 10          	mov    0x10(%rbp),%rdx
 487:	0f 84 a6 00 00 00    	je     533 <handle_fildes_io+0x533>
 48d:	48 89 50 10          	mov    %rdx,0x10(%rax)
 491:	48 8b 55 10          	mov    0x10(%rbp),%rdx
 495:	48 85 d2             	test   %rdx,%rdx
 498:	0f 84 8c fc ff ff    	je     12a <handle_fildes_io+0x12a>
 49e:	48 89 42 08          	mov    %rax,0x8(%rdx)
 4a2:	e9 83 fc ff ff       	jmpq   12a <handle_fildes_io+0x12a>
 4a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 4ae:	00 00 
 4b0:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 4b7 <handle_fildes_io+0x4b7>
 4b7:	e9 45 fc ff ff       	jmpq   101 <handle_fildes_io+0x101>
 4bc:	0f 1f 40 00          	nopl   0x0(%rax)
 4c0:	83 fa 1d             	cmp    $0x1d,%edx
 4c3:	48 89 43 78          	mov    %rax,0x78(%rbx)
 4c7:	0f 85 e3 fb ff ff    	jne    b0 <handle_fildes_io+0xb0>
 4cd:	eb 0d                	jmp    4dc <handle_fildes_io+0x4dc>
 4cf:	90                   	nop
 4d0:	64 41 83 3c 24 04    	cmpl   $0x4,%fs:(%r12)
 4d6:	0f 85 f6 fd ff ff    	jne    2d2 <handle_fildes_io+0x2d2>
 4dc:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 4e0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
 4e4:	44 89 f7             	mov    %r14d,%edi
 4e7:	e8 00 00 00 00       	callq  4ec <handle_fildes_io+0x4ec>
 4ec:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
 4f0:	74 de                	je     4d0 <handle_fildes_io+0x4d0>
 4f2:	48 89 43 78          	mov    %rax,0x78(%rbx)
 4f6:	e9 b5 fb ff ff       	jmpq   b0 <handle_fildes_io+0xb0>
 4fb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
 500:	f3 0f 7e 44 24 08    	movq   0x8(%rsp),%xmm0
 506:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
 50b:	0f 16 44 24 08       	movhps 0x8(%rsp),%xmm0
 510:	66 0f d4 05 00 00 00 	paddq  0x0(%rip),%xmm0        # 518 <handle_fildes_io+0x518>
 517:	00 
 518:	66 0f 7f 44 24 40    	movdqa %xmm0,0x40(%rsp)
 51e:	e9 31 fd ff ff       	jmpq   254 <handle_fildes_io+0x254>
 523:	4c 8b 45 20          	mov    0x20(%rbp),%r8
 527:	4c 89 05 00 00 00 00 	mov    %r8,0x0(%rip)        # 52e <handle_fildes_io+0x52e>
 52e:	e9 06 fc ff ff       	jmpq   139 <handle_fildes_io+0x139>
 533:	48 89 15 00 00 00 00 	mov    %rdx,0x0(%rip)        # 53a <handle_fildes_io+0x53a>
 53a:	e9 56 ff ff ff       	jmpq   495 <handle_fildes_io+0x495>
 53f:	45 31 c0             	xor    %r8d,%r8d
 542:	e9 f2 fb ff ff       	jmpq   139 <handle_fildes_io+0x139>
 547:	b9 00 00 00 00       	mov    $0x0,%ecx
 54c:	ba ff 01 00 00       	mov    $0x1ff,%edx
 551:	be 00 00 00 00       	mov    $0x0,%esi
 556:	bf 00 00 00 00       	mov    $0x0,%edi
 55b:	e8 00 00 00 00       	callq  560 <handle_fildes_io+0x560>
 560:	b9 00 00 00 00       	mov    $0x0,%ecx
 565:	ba 90 02 00 00       	mov    $0x290,%edx
 56a:	be 00 00 00 00       	mov    $0x0,%esi
 56f:	bf 00 00 00 00       	mov    $0x0,%edi
 574:	e8 00 00 00 00       	callq  579 <handle_fildes_io+0x579>
 579:	b9 00 00 00 00       	mov    $0x0,%ecx
 57e:	ba 67 02 00 00       	mov    $0x267,%edx
 583:	be 00 00 00 00       	mov    $0x0,%esi
 588:	bf 00 00 00 00       	mov    $0x0,%edi
 58d:	e8 00 00 00 00       	callq  592 <handle_fildes_io+0x592>
 592:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
 599:	1f 84 00 00 00 00 00 

00000000000005a0 <__aio_free_request>:
 5a0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5a7 <__aio_free_request+0x7>
 5a7:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
 5ad:	48 89 3d 00 00 00 00 	mov    %rdi,0x0(%rip)        # 5b4 <__aio_free_request+0x14>
 5b4:	48 89 47 18          	mov    %rax,0x18(%rdi)
 5b8:	c3                   	retq   
 5b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000005c0 <__aio_find_req>:
 5c0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5c7 <__aio_find_req+0x7>
 5c7:	8b 37                	mov    (%rdi),%esi
 5c9:	48 85 c0             	test   %rax,%rax
 5cc:	75 0b                	jne    5d9 <__aio_find_req+0x19>
 5ce:	eb 32                	jmp    602 <__aio_find_req+0x42>
 5d0:	48 8b 40 10          	mov    0x10(%rax),%rax
 5d4:	48 85 c0             	test   %rax,%rax
 5d7:	74 29                	je     602 <__aio_find_req+0x42>
 5d9:	48 8b 50 28          	mov    0x28(%rax),%rdx
 5dd:	8b 0a                	mov    (%rdx),%ecx
 5df:	39 ce                	cmp    %ecx,%esi
 5e1:	7f ed                	jg     5d0 <__aio_find_req+0x10>
 5e3:	39 f1                	cmp    %esi,%ecx
 5e5:	74 0d                	je     5f4 <__aio_find_req+0x34>
 5e7:	eb 21                	jmp    60a <__aio_find_req+0x4a>
 5e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 5f0:	48 8b 50 28          	mov    0x28(%rax),%rdx
 5f4:	48 39 d7             	cmp    %rdx,%rdi
 5f7:	74 0f                	je     608 <__aio_find_req+0x48>
 5f9:	48 8b 40 18          	mov    0x18(%rax),%rax
 5fd:	48 85 c0             	test   %rax,%rax
 600:	75 ee                	jne    5f0 <__aio_find_req+0x30>
 602:	f3 c3                	repz retq 
 604:	0f 1f 40 00          	nopl   0x0(%rax)
 608:	f3 c3                	repz retq 
 60a:	31 c0                	xor    %eax,%eax
 60c:	0f 1f 40 00          	nopl   0x0(%rax)
 610:	c3                   	retq   
 611:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
 618:	0f 1f 84 00 00 00 00 
 61f:	00 

0000000000000620 <__aio_find_req_fd>:
 620:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 627 <__aio_find_req_fd+0x7>
 627:	48 85 d2             	test   %rdx,%rdx
 62a:	74 27                	je     653 <__aio_find_req_fd+0x33>
 62c:	48 8b 42 28          	mov    0x28(%rdx),%rax
 630:	8b 08                	mov    (%rax),%ecx
 632:	39 cf                	cmp    %ecx,%edi
 634:	7f 14                	jg     64a <__aio_find_req_fd+0x2a>
 636:	eb 28                	jmp    660 <__aio_find_req_fd+0x40>
 638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 63f:	00 
 640:	48 8b 42 28          	mov    0x28(%rdx),%rax
 644:	8b 08                	mov    (%rax),%ecx
 646:	39 f9                	cmp    %edi,%ecx
 648:	7d 16                	jge    660 <__aio_find_req_fd+0x40>
 64a:	48 8b 52 10          	mov    0x10(%rdx),%rdx
 64e:	48 85 d2             	test   %rdx,%rdx
 651:	75 ed                	jne    640 <__aio_find_req_fd+0x20>
 653:	31 c0                	xor    %eax,%eax
 655:	c3                   	retq   
 656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65d:	00 00 00 
 660:	31 c0                	xor    %eax,%eax
 662:	39 cf                	cmp    %ecx,%edi
 664:	48 0f 44 c2          	cmove  %rdx,%rax
 668:	c3                   	retq   
 669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000670 <__aio_remove_request>:
 670:	8b 06                	mov    (%rsi),%eax
 672:	8d 48 ff             	lea    -0x1(%rax),%ecx
 675:	83 f9 01             	cmp    $0x1,%ecx
 678:	0f 87 e3 00 00 00    	ja     761 <__aio_remove_request+0xf1>
 67e:	48 85 ff             	test   %rdi,%rdi
 681:	74 15                	je     698 <__aio_remove_request+0x28>
 683:	31 c0                	xor    %eax,%eax
 685:	85 d2                	test   %edx,%edx
 687:	75 04                	jne    68d <__aio_remove_request+0x1d>
 689:	48 8b 46 18          	mov    0x18(%rsi),%rax
 68d:	48 89 47 18          	mov    %rax,0x18(%rdi)
 691:	c3                   	retq   
 692:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 698:	85 d2                	test   %edx,%edx
 69a:	75 74                	jne    710 <__aio_remove_request+0xa0>
 69c:	48 8b 56 18          	mov    0x18(%rsi),%rdx
 6a0:	48 85 d2             	test   %rdx,%rdx
 6a3:	74 6b                	je     710 <__aio_remove_request+0xa0>
 6a5:	48 8b 46 08          	mov    0x8(%rsi),%rax
 6a9:	48 85 c0             	test   %rax,%rax
 6ac:	0f 84 97 00 00 00    	je     749 <__aio_remove_request+0xd9>
 6b2:	48 89 50 10          	mov    %rdx,0x10(%rax)
 6b6:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
 6ba:	48 85 c9             	test   %rcx,%rcx
 6bd:	74 08                	je     6c7 <__aio_remove_request+0x57>
 6bf:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 6c3:	48 8b 46 08          	mov    0x8(%rsi),%rax
 6c7:	48 89 42 08          	mov    %rax,0x8(%rdx)
 6cb:	c7 02 02 00 00 00    	movl   $0x2,(%rdx)
 6d1:	8b 06                	mov    (%rsi),%eax
 6d3:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
 6d7:	83 f8 02             	cmp    $0x2,%eax
 6da:	74 04                	je     6e0 <__aio_remove_request+0x70>
 6dc:	f3 c3                	repz retq 
 6de:	66 90                	xchg   %ax,%ax
 6e0:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 6e7 <__aio_remove_request+0x77>
 6e7:	48 85 d2             	test   %rdx,%rdx
 6ea:	74 f0                	je     6dc <__aio_remove_request+0x6c>
 6ec:	48 39 d6             	cmp    %rdx,%rsi
 6ef:	75 0f                	jne    700 <__aio_remove_request+0x90>
 6f1:	eb 62                	jmp    755 <__aio_remove_request+0xe5>
 6f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 6f8:	48 39 c6             	cmp    %rax,%rsi
 6fb:	74 33                	je     730 <__aio_remove_request+0xc0>
 6fd:	48 89 c2             	mov    %rax,%rdx
 700:	48 8b 42 20          	mov    0x20(%rdx),%rax
 704:	48 85 c0             	test   %rax,%rax
 707:	75 ef                	jne    6f8 <__aio_remove_request+0x88>
 709:	f3 c3                	repz retq 
 70b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 710:	48 8b 56 08          	mov    0x8(%rsi),%rdx
 714:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
 718:	48 85 d2             	test   %rdx,%rdx
 71b:	74 23                	je     740 <__aio_remove_request+0xd0>
 71d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
 721:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
 725:	48 85 c9             	test   %rcx,%rcx
 728:	74 ad                	je     6d7 <__aio_remove_request+0x67>
 72a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 72e:	eb a7                	jmp    6d7 <__aio_remove_request+0x67>
 730:	48 8b 46 20          	mov    0x20(%rsi),%rax
 734:	48 89 42 20          	mov    %rax,0x20(%rdx)
 738:	c3                   	retq   
 739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 740:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 747 <__aio_remove_request+0xd7>
 747:	eb dc                	jmp    725 <__aio_remove_request+0xb5>
 749:	48 89 15 00 00 00 00 	mov    %rdx,0x0(%rip)        # 750 <__aio_remove_request+0xe0>
 750:	e9 61 ff ff ff       	jmpq   6b6 <__aio_remove_request+0x46>
 755:	48 8b 46 20          	mov    0x20(%rsi),%rax
 759:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 760 <__aio_remove_request+0xf0>
 760:	c3                   	retq   
 761:	83 f8 04             	cmp    $0x4,%eax
 764:	0f 84 14 ff ff ff    	je     67e <__aio_remove_request+0xe>
 76a:	50                   	push   %rax
 76b:	b9 00 00 00 00       	mov    $0x0,%ecx
 770:	ba d6 00 00 00       	mov    $0xd6,%edx
 775:	be 00 00 00 00       	mov    $0x0,%esi
 77a:	bf 00 00 00 00       	mov    $0x0,%edi
 77f:	e8 00 00 00 00       	callq  784 <__aio_remove_request+0x114>
 784:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
 78b:	00 00 00 00 00 

0000000000000790 <__aio_init>:
 790:	53                   	push   %rbx
 791:	48 89 fb             	mov    %rdi,%rbx
 794:	bf 00 00 00 00       	mov    $0x0,%edi
 799:	e8 00 00 00 00       	callq  79e <__aio_init+0xe>
 79e:	48 83 3d 00 00 00 00 	cmpq   $0x0,0x0(%rip)        # 7a6 <__aio_init+0x16>
 7a5:	00 
 7a6:	74 18                	je     7c0 <__aio_init+0x30>
 7a8:	8b 43 18             	mov    0x18(%rbx),%eax
 7ab:	85 c0                	test   %eax,%eax
 7ad:	74 06                	je     7b5 <__aio_init+0x25>
 7af:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 7b5 <__aio_init+0x25>
 7b5:	5b                   	pop    %rbx
 7b6:	bf 00 00 00 00       	mov    $0x0,%edi
 7bb:	e9 00 00 00 00       	jmpq   7c0 <__aio_init+0x30>
 7c0:	8b 13                	mov    (%rbx),%edx
 7c2:	b8 01 00 00 00       	mov    $0x1,%eax
 7c7:	85 d2                	test   %edx,%edx
 7c9:	8b 53 04             	mov    0x4(%rbx),%edx
 7cc:	0f 4f 03             	cmovg  (%rbx),%eax
 7cf:	89 d1                	mov    %edx,%ecx
 7d1:	83 e1 e0             	and    $0xffffffe0,%ecx
 7d4:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 7da <__aio_init+0x4a>
 7da:	83 fa 20             	cmp    $0x20,%edx
 7dd:	b8 20 00 00 00       	mov    $0x20,%eax
 7e2:	0f 4d c1             	cmovge %ecx,%eax
 7e5:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 7eb <__aio_init+0x5b>
 7eb:	eb bb                	jmp    7a8 <__aio_init+0x18>
 7ed:	0f 1f 00             	nopl   (%rax)

00000000000007f0 <__aio_enqueue_request>:
 7f0:	41 57                	push   %r15
 7f2:	8d 46 fd             	lea    -0x3(%rsi),%eax
 7f5:	41 89 f7             	mov    %esi,%r15d
 7f8:	41 56                	push   %r14
 7fa:	41 55                	push   %r13
 7fc:	41 54                	push   %r12
 7fe:	49 89 fc             	mov    %rdi,%r12
 801:	55                   	push   %rbp
 802:	53                   	push   %rbx
 803:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
 80a:	83 f8 01             	cmp    $0x1,%eax
 80d:	0f 86 d5 01 00 00    	jbe    9e8 <__aio_enqueue_request+0x1f8>
 813:	83 7f 08 14          	cmpl   $0x14,0x8(%rdi)
 817:	0f 87 64 03 00 00    	ja     b81 <__aio_enqueue_request+0x391>
 81d:	e8 00 00 00 00       	callq  822 <__aio_enqueue_request+0x32>
 822:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
 827:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
 82c:	48 89 c7             	mov    %rax,%rdi
 82f:	e8 00 00 00 00       	callq  834 <__aio_enqueue_request+0x44>
 834:	bf 00 00 00 00       	mov    $0x0,%edi
 839:	44 8b 74 24 30       	mov    0x30(%rsp),%r14d
 83e:	45 2b 74 24 08       	sub    0x8(%r12),%r14d
 843:	e8 00 00 00 00       	callq  848 <__aio_enqueue_request+0x58>
 848:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 84f <__aio_enqueue_request+0x5f>
 84f:	48 85 c9             	test   %rcx,%rcx
 852:	0f 84 5d 03 00 00    	je     bb5 <__aio_enqueue_request+0x3c5>
 858:	48 8b 41 28          	mov    0x28(%rcx),%rax
 85c:	41 8b 14 24          	mov    (%r12),%edx
 860:	3b 10                	cmp    (%rax),%edx
 862:	0f 8e a4 03 00 00    	jle    c0c <__aio_enqueue_request+0x41c>
 868:	48 89 cd             	mov    %rcx,%rbp
 86b:	eb 0e                	jmp    87b <__aio_enqueue_request+0x8b>
 86d:	0f 1f 00             	nopl   (%rax)
 870:	48 8b 43 28          	mov    0x28(%rbx),%rax
 874:	39 10                	cmp    %edx,(%rax)
 876:	7d 0c                	jge    884 <__aio_enqueue_request+0x94>
 878:	48 89 dd             	mov    %rbx,%rbp
 87b:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
 87f:	48 85 db             	test   %rbx,%rbx
 882:	75 ec                	jne    870 <__aio_enqueue_request+0x80>
 884:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 88b <__aio_enqueue_request+0x9b>
 88b:	4d 85 ed             	test   %r13,%r13
 88e:	0f 84 34 02 00 00    	je     ac8 <__aio_enqueue_request+0x2d8>
 894:	49 8b 55 18          	mov    0x18(%r13),%rdx
 898:	8b 44 24 20          	mov    0x20(%rsp),%eax
 89c:	48 85 db             	test   %rbx,%rbx
 89f:	4d 89 65 28          	mov    %r12,0x28(%r13)
 8a3:	49 c7 45 30 00 00 00 	movq   $0x0,0x30(%r13)
 8aa:	00 
 8ab:	48 89 15 00 00 00 00 	mov    %rdx,0x0(%rip)        # 8b2 <__aio_enqueue_request+0xc2>
 8b2:	45 89 74 24 68       	mov    %r14d,0x68(%r12)
 8b7:	45 89 7c 24 04       	mov    %r15d,0x4(%r12)
 8bc:	41 89 44 24 6c       	mov    %eax,0x6c(%r12)
 8c1:	41 c7 44 24 70 73 00 	movl   $0x73,0x70(%r12)
 8c8:	00 00 
 8ca:	49 c7 44 24 78 00 00 	movq   $0x0,0x78(%r12)
 8d1:	00 00 
 8d3:	74 10                	je     8e5 <__aio_enqueue_request+0xf5>
 8d5:	48 8b 43 28          	mov    0x28(%rbx),%rax
 8d9:	41 8b 3c 24          	mov    (%r12),%edi
 8dd:	39 38                	cmp    %edi,(%rax)
 8df:	0f 84 98 00 00 00    	je     97d <__aio_enqueue_request+0x18d>
 8e5:	48 85 ed             	test   %rbp,%rbp
 8e8:	0f 84 72 02 00 00    	je     b60 <__aio_enqueue_request+0x370>
 8ee:	48 8b 45 10          	mov    0x10(%rbp),%rax
 8f2:	49 89 6d 08          	mov    %rbp,0x8(%r13)
 8f6:	49 89 45 10          	mov    %rax,0x10(%r13)
 8fa:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
 8fe:	49 8b 45 10          	mov    0x10(%r13),%rax
 902:	48 85 c0             	test   %rax,%rax
 905:	74 04                	je     90b <__aio_enqueue_request+0x11b>
 907:	4c 89 68 08          	mov    %r13,0x8(%rax)
 90b:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 911 <__aio_enqueue_request+0x121>
 911:	39 05 00 00 00 00    	cmp    %eax,0x0(%rip)        # 917 <__aio_enqueue_request+0x127>
 917:	49 c7 45 18 00 00 00 	movq   $0x0,0x18(%r13)
 91e:	00 
 91f:	0f 8f d3 00 00 00    	jg     9f8 <__aio_enqueue_request+0x208>
 925:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 92c <__aio_enqueue_request+0x13c>
 92c:	49 8b 45 28          	mov    0x28(%r13),%rax
 930:	48 85 d2             	test   %rdx,%rdx
 933:	8b 70 68             	mov    0x68(%rax),%esi
 936:	74 0d                	je     945 <__aio_enqueue_request+0x155>
 938:	48 8b 42 28          	mov    0x28(%rdx),%rax
 93c:	3b 70 68             	cmp    0x68(%rax),%esi
 93f:	0f 8e 87 00 00 00    	jle    9cc <__aio_enqueue_request+0x1dc>
 945:	49 89 55 20          	mov    %rdx,0x20(%r13)
 949:	4c 89 2d 00 00 00 00 	mov    %r13,0x0(%rip)        # 950 <__aio_enqueue_request+0x160>
 950:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 956 <__aio_enqueue_request+0x166>
 956:	85 c0                	test   %eax,%eax
 958:	7e 0a                	jle    964 <__aio_enqueue_request+0x174>
 95a:	bf 00 00 00 00       	mov    $0x0,%edi
 95f:	e8 00 00 00 00       	callq  964 <__aio_enqueue_request+0x174>
 964:	b8 02 00 00 00       	mov    $0x2,%eax
 969:	eb 28                	jmp    993 <__aio_enqueue_request+0x1a3>
 96b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 970:	48 8b 42 28          	mov    0x28(%rdx),%rax
 974:	44 3b 70 68          	cmp    0x68(%rax),%r14d
 978:	7f 0c                	jg     986 <__aio_enqueue_request+0x196>
 97a:	48 89 d3             	mov    %rdx,%rbx
 97d:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 981:	48 85 d2             	test   %rdx,%rdx
 984:	75 ea                	jne    970 <__aio_enqueue_request+0x180>
 986:	49 89 55 18          	mov    %rdx,0x18(%r13)
 98a:	b8 01 00 00 00       	mov    $0x1,%eax
 98f:	4c 89 6b 18          	mov    %r13,0x18(%rbx)
 993:	41 89 45 00          	mov    %eax,0x0(%r13)
 997:	bf 00 00 00 00       	mov    $0x0,%edi
 99c:	e8 00 00 00 00       	callq  9a1 <__aio_enqueue_request+0x1b1>
 9a1:	4c 89 e8             	mov    %r13,%rax
 9a4:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
 9ab:	5b                   	pop    %rbx
 9ac:	5d                   	pop    %rbp
 9ad:	41 5c                	pop    %r12
 9af:	41 5d                	pop    %r13
 9b1:	41 5e                	pop    %r14
 9b3:	41 5f                	pop    %r15
 9b5:	c3                   	retq   
 9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 9bd:	00 00 00 
 9c0:	48 8b 48 28          	mov    0x28(%rax),%rcx
 9c4:	3b 71 68             	cmp    0x68(%rcx),%esi
 9c7:	7f 0c                	jg     9d5 <__aio_enqueue_request+0x1e5>
 9c9:	48 89 c2             	mov    %rax,%rdx
 9cc:	48 8b 42 20          	mov    0x20(%rdx),%rax
 9d0:	48 85 c0             	test   %rax,%rax
 9d3:	75 eb                	jne    9c0 <__aio_enqueue_request+0x1d0>
 9d5:	49 89 45 20          	mov    %rax,0x20(%r13)
 9d9:	4c 89 6a 20          	mov    %r13,0x20(%rdx)
 9dd:	e9 6e ff ff ff       	jmpq   950 <__aio_enqueue_request+0x160>
 9e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 9e8:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
 9ef:	e9 29 fe ff ff       	jmpq   81d <__aio_enqueue_request+0x2d>
 9f4:	0f 1f 40 00          	nopl   0x0(%rax)
 9f8:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 9fe <__aio_enqueue_request+0x20e>
 9fe:	85 c9                	test   %ecx,%ecx
 a00:	0f 85 1f ff ff ff    	jne    925 <__aio_enqueue_request+0x135>
 a06:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
 a0b:	41 c7 45 00 03 00 00 	movl   $0x3,0x0(%r13)
 a12:	00 
 a13:	e8 00 00 00 00       	callq  a18 <__aio_enqueue_request+0x228>
 a18:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
 a1d:	be 01 00 00 00       	mov    $0x1,%esi
 a22:	e8 00 00 00 00       	callq  a27 <__aio_enqueue_request+0x237>
 a27:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
 a2c:	e8 00 00 00 00       	callq  a31 <__aio_enqueue_request+0x241>
 a31:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
 a36:	48 89 c6             	mov    %rax,%rsi
 a39:	e8 00 00 00 00       	callq  a3e <__aio_enqueue_request+0x24e>
 a3e:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
 a45:	00 
 a46:	e8 00 00 00 00       	callq  a4b <__aio_enqueue_request+0x25b>
 a4b:	41 ba 08 00 00 00    	mov    $0x8,%r10d
 a51:	48 8d 94 24 10 01 00 	lea    0x110(%rsp),%rdx
 a58:	00 
 a59:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
 a60:	00 
 a61:	bf 02 00 00 00       	mov    $0x2,%edi
 a66:	b8 0e 00 00 00       	mov    $0xe,%eax
 a6b:	0f 05                	syscall 
 a6d:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
 a72:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
 a77:	4c 89 e9             	mov    %r13,%rcx
 a7a:	ba 00 00 00 00       	mov    $0x0,%edx
 a7f:	e8 00 00 00 00       	callq  a84 <__aio_enqueue_request+0x294>
 a84:	41 ba 08 00 00 00    	mov    $0x8,%r10d
 a8a:	89 c3                	mov    %eax,%ebx
 a8c:	31 d2                	xor    %edx,%edx
 a8e:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
 a95:	00 
 a96:	bf 02 00 00 00       	mov    $0x2,%edi
 a9b:	b8 0e 00 00 00       	mov    $0xe,%eax
 aa0:	0f 05                	syscall 
 aa2:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
 aa7:	e8 00 00 00 00       	callq  aac <__aio_enqueue_request+0x2bc>
 aac:	85 db                	test   %ebx,%ebx
 aae:	0f 85 62 01 00 00    	jne    c16 <__aio_enqueue_request+0x426>
 ab4:	83 05 00 00 00 00 01 	addl   $0x1,0x0(%rip)        # abb <__aio_enqueue_request+0x2cb>
 abb:	b8 03 00 00 00       	mov    $0x3,%eax
 ac0:	e9 ce fe ff ff       	jmpq   993 <__aio_enqueue_request+0x1a3>
 ac5:	0f 1f 00             	nopl   (%rax)
 ac8:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # acf <__aio_enqueue_request+0x2df>
 acf:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # ad6 <__aio_enqueue_request+0x2e6>
 ad6:	4c 8d 42 01          	lea    0x1(%rdx),%r8
 ada:	49 39 c0             	cmp    %rax,%r8
 add:	0f 83 db 00 00 00    	jae    bbe <__aio_enqueue_request+0x3ce>
 ae3:	48 85 d2             	test   %rdx,%rdx
 ae6:	0f 85 b9 00 00 00    	jne    ba5 <__aio_enqueue_request+0x3b5>
 aec:	44 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13d        # af3 <__aio_enqueue_request+0x303>
 af3:	49 63 fd             	movslq %r13d,%rdi
 af6:	be 38 00 00 00       	mov    $0x38,%esi
 afb:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
 b00:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
 b05:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
 b0a:	e8 00 00 00 00       	callq  b0f <__aio_enqueue_request+0x31f>
 b0f:	48 85 c0             	test   %rax,%rax
 b12:	0f 84 51 01 00 00    	je     c69 <__aio_enqueue_request+0x479>
 b18:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
 b1d:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
 b22:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # b29 <__aio_enqueue_request+0x339>
 b29:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
 b2e:	4c 89 05 00 00 00 00 	mov    %r8,0x0(%rip)        # b35 <__aio_enqueue_request+0x345>
 b35:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
 b39:	31 d2                	xor    %edx,%edx
 b3b:	eb 09                	jmp    b46 <__aio_enqueue_request+0x356>
 b3d:	0f 1f 00             	nopl   (%rax)
 b40:	48 89 c2             	mov    %rax,%rdx
 b43:	48 89 f0             	mov    %rsi,%rax
 b46:	41 83 ed 01          	sub    $0x1,%r13d
 b4a:	48 89 50 18          	mov    %rdx,0x18(%rax)
 b4e:	48 8d 70 38          	lea    0x38(%rax),%rsi
 b52:	45 85 ed             	test   %r13d,%r13d
 b55:	7f e9                	jg     b40 <__aio_enqueue_request+0x350>
 b57:	49 89 c5             	mov    %rax,%r13
 b5a:	e9 39 fd ff ff       	jmpq   898 <__aio_enqueue_request+0xa8>
 b5f:	90                   	nop
 b60:	48 85 c9             	test   %rcx,%rcx
 b63:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
 b6a:	00 
 b6b:	49 89 4d 10          	mov    %rcx,0x10(%r13)
 b6f:	74 04                	je     b75 <__aio_enqueue_request+0x385>
 b71:	4c 89 69 08          	mov    %r13,0x8(%rcx)
 b75:	4c 89 2d 00 00 00 00 	mov    %r13,0x0(%rip)        # b7c <__aio_enqueue_request+0x38c>
 b7c:	e9 8a fd ff ff       	jmpq   90b <__aio_enqueue_request+0x11b>
 b81:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b88 <__aio_enqueue_request+0x398>
 b88:	c7 47 70 16 00 00 00 	movl   $0x16,0x70(%rdi)
 b8f:	48 c7 47 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%rdi)
 b96:	ff 
 b97:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
 b9e:	31 c0                	xor    %eax,%eax
 ba0:	e9 ff fd ff ff       	jmpq   9a4 <__aio_enqueue_request+0x1b4>
 ba5:	bf 20 00 00 00       	mov    $0x20,%edi
 baa:	41 bd 20 00 00 00    	mov    $0x20,%r13d
 bb0:	e9 41 ff ff ff       	jmpq   af6 <__aio_enqueue_request+0x306>
 bb5:	31 db                	xor    %ebx,%ebx
 bb7:	31 ed                	xor    %ebp,%ebp
 bb9:	e9 c6 fc ff ff       	jmpq   884 <__aio_enqueue_request+0x94>
 bbe:	4c 8d 68 08          	lea    0x8(%rax),%r13
 bc2:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # bc9 <__aio_enqueue_request+0x3d9>
 bc9:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
 bce:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
 bd3:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
 bd8:	4a 8d 34 ed 00 00 00 	lea    0x0(,%r13,8),%rsi
 bdf:	00 
 be0:	e8 00 00 00 00       	callq  be5 <__aio_enqueue_request+0x3f5>
 be5:	48 85 c0             	test   %rax,%rax
 be8:	74 7f                	je     c69 <__aio_enqueue_request+0x479>
 bea:	4c 89 2d 00 00 00 00 	mov    %r13,0x0(%rip)        # bf1 <__aio_enqueue_request+0x401>
 bf1:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # bf8 <__aio_enqueue_request+0x408>
 bf8:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
 bfd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
 c02:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
 c07:	e9 d7 fe ff ff       	jmpq   ae3 <__aio_enqueue_request+0x2f3>
 c0c:	48 89 cb             	mov    %rcx,%rbx
 c0f:	31 ed                	xor    %ebp,%ebp
 c11:	e9 6e fc ff ff       	jmpq   884 <__aio_enqueue_request+0x94>
 c16:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # c1c <__aio_enqueue_request+0x42c>
 c1c:	41 c7 45 00 02 00 00 	movl   $0x2,0x0(%r13)
 c23:	00 
 c24:	85 d2                	test   %edx,%edx
 c26:	0f 85 f9 fc ff ff    	jne    925 <__aio_enqueue_request+0x135>
 c2c:	4c 89 ee             	mov    %r13,%rsi
 c2f:	31 d2                	xor    %edx,%edx
 c31:	31 ff                	xor    %edi,%edi
 c33:	e8 00 00 00 00       	callq  c38 <__aio_enqueue_request+0x448>
 c38:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # c3f <__aio_enqueue_request+0x44f>
 c3f:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
 c46:	00 
 c47:	4c 89 2d 00 00 00 00 	mov    %r13,0x0(%rip)        # c4e <__aio_enqueue_request+0x45e>
 c4e:	49 89 45 18          	mov    %rax,0x18(%r13)
 c52:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # c59 <__aio_enqueue_request+0x469>
 c59:	45 31 ed             	xor    %r13d,%r13d
 c5c:	41 89 5c 24 70       	mov    %ebx,0x70(%r12)
 c61:	64 89 18             	mov    %ebx,%fs:(%rax)
 c64:	e9 2e fd ff ff       	jmpq   997 <__aio_enqueue_request+0x1a7>
 c69:	bf 00 00 00 00       	mov    $0x0,%edi
 c6e:	e8 00 00 00 00       	callq  c73 <__aio_enqueue_request+0x483>
 c73:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # c7a <__aio_enqueue_request+0x48a>
 c7a:	64 c7 00 0b 00 00 00 	movl   $0xb,%fs:(%rax)
 c81:	31 c0                	xor    %eax,%eax
 c83:	e9 1c fd ff ff       	jmpq   9a4 <__aio_enqueue_request+0x1b4>

Disassembly of section __libc_freeres_fn:

0000000000000000 <free_res>:
   0:	41 54                	push   %r12
   2:	4c 8b 25 00 00 00 00 	mov    0x0(%rip),%r12        # 9 <free_res+0x9>
   9:	55                   	push   %rbp
   a:	48 8b 2d 00 00 00 00 	mov    0x0(%rip),%rbp        # 11 <free_res+0x11>
  11:	53                   	push   %rbx
  12:	31 db                	xor    %ebx,%ebx
  14:	48 85 ed             	test   %rbp,%rbp
  17:	74 19                	je     32 <free_res+0x32>
  19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  20:	49 8b 3c dc          	mov    (%r12,%rbx,8),%rdi
  24:	48 83 c3 01          	add    $0x1,%rbx
  28:	e8 00 00 00 00       	callq  2d <free_res+0x2d>
  2d:	48 39 eb             	cmp    %rbp,%rbx
  30:	75 ee                	jne    20 <free_res+0x20>
  32:	5b                   	pop    %rbx
  33:	5d                   	pop    %rbp
  34:	4c 89 e7             	mov    %r12,%rdi
  37:	41 5c                	pop    %r12
  39:	e9 00 00 00 00       	jmpq   3e <idle_thread_count+0xe>

aio_read.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <aio_read>:
   0:	48 83 ec 08          	sub    $0x8,%rsp
   4:	31 f6                	xor    %esi,%esi
   6:	e8 00 00 00 00       	callq  b <aio_read+0xb>
   b:	48 85 c0             	test   %rax,%rax
   e:	0f 94 c0             	sete   %al
  11:	48 83 c4 08          	add    $0x8,%rsp
  15:	0f b6 c0             	movzbl %al,%eax
  18:	f7 d8                	neg    %eax
  1a:	c3                   	retq   

aio_read64.o:     file format elf64-x86-64


aio_return.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <aio_return>:
   0:	48 8b 47 78          	mov    0x78(%rdi),%rax
   4:	c3                   	retq   

aio_suspend.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <do_aio_misc_wait>:
   0:	41 54                	push   %r12
   2:	45 31 e4             	xor    %r12d,%r12d
   5:	55                   	push   %rbp
   6:	53                   	push   %rbx
   7:	48 89 fb             	mov    %rdi,%rbx
   a:	48 83 ec 10          	sub    $0x10,%rsp
   e:	8b 17                	mov    (%rdi),%edx
  10:	85 d2                	test   %edx,%edx
  12:	75 0c                	jne    20 <do_aio_misc_wait+0x20>
  14:	48 83 c4 10          	add    $0x10,%rsp
  18:	44 89 e0             	mov    %r12d,%eax
  1b:	5b                   	pop    %rbx
  1c:	5d                   	pop    %rbp
  1d:	41 5c                	pop    %r12
  1f:	c3                   	retq   
  20:	bf 00 00 00 00       	mov    $0x0,%edi
  25:	48 89 f5             	mov    %rsi,%rbp
  28:	89 54 24 0c          	mov    %edx,0xc(%rsp)
  2c:	e8 00 00 00 00       	callq  31 <do_aio_misc_wait+0x31>
  31:	e8 00 00 00 00       	callq  36 <do_aio_misc_wait+0x36>
  36:	41 b8 ca 00 00 00    	mov    $0xca,%r8d
  3c:	41 89 c1             	mov    %eax,%r9d
  3f:	be 80 00 00 00       	mov    $0x80,%esi
  44:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  48:	eb 0c                	jmp    56 <do_aio_misc_wait+0x56>
  4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  50:	8b 13                	mov    (%rbx),%edx
  52:	85 d2                	test   %edx,%edx
  54:	74 4a                	je     a0 <do_aio_misc_wait+0xa0>
  56:	49 89 ea             	mov    %rbp,%r10
  59:	44 89 c0             	mov    %r8d,%eax
  5c:	48 89 df             	mov    %rbx,%rdi
  5f:	0f 05                	syscall 
  61:	83 f8 f5             	cmp    $0xfffffff5,%eax
  64:	74 ea                	je     50 <do_aio_misc_wait+0x50>
  66:	44 89 cf             	mov    %r9d,%edi
  69:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  6d:	e8 00 00 00 00       	callq  72 <do_aio_misc_wait+0x72>
  72:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  76:	83 f8 fc             	cmp    $0xfffffffc,%eax
  79:	74 35                	je     b0 <do_aio_misc_wait+0xb0>
  7b:	83 f8 92             	cmp    $0xffffff92,%eax
  7e:	41 bc 0b 00 00 00    	mov    $0xb,%r12d
  84:	75 3a                	jne    c0 <do_aio_misc_wait+0xc0>
  86:	bf 00 00 00 00       	mov    $0x0,%edi
  8b:	e8 00 00 00 00       	callq  90 <do_aio_misc_wait+0x90>
  90:	48 83 c4 10          	add    $0x10,%rsp
  94:	44 89 e0             	mov    %r12d,%eax
  97:	5b                   	pop    %rbx
  98:	5d                   	pop    %rbp
  99:	41 5c                	pop    %r12
  9b:	c3                   	retq   
  9c:	0f 1f 40 00          	nopl   0x0(%rax)
  a0:	44 89 cf             	mov    %r9d,%edi
  a3:	45 31 e4             	xor    %r12d,%r12d
  a6:	e8 00 00 00 00       	callq  ab <do_aio_misc_wait+0xab>
  ab:	eb d9                	jmp    86 <do_aio_misc_wait+0x86>
  ad:	0f 1f 00             	nopl   (%rax)
  b0:	41 bc 04 00 00 00    	mov    $0x4,%r12d
  b6:	eb ce                	jmp    86 <do_aio_misc_wait+0x86>
  b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  bf:	00 
  c0:	85 c0                	test   %eax,%eax
  c2:	74 19                	je     dd <do_aio_misc_wait+0xdd>
  c4:	b9 00 00 00 00       	mov    $0x0,%ecx
  c9:	ba 65 00 00 00       	mov    $0x65,%edx
  ce:	be 00 00 00 00       	mov    $0x0,%esi
  d3:	bf 00 00 00 00       	mov    $0x0,%edi
  d8:	e8 00 00 00 00       	callq  dd <do_aio_misc_wait+0xdd>
  dd:	45 31 e4             	xor    %r12d,%r12d
  e0:	eb a4                	jmp    86 <do_aio_misc_wait+0x86>
  e2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  e9:	1f 84 00 00 00 00 00 

00000000000000f0 <aio_suspend>:
  f0:	55                   	push   %rbp
  f1:	48 89 e5             	mov    %rsp,%rbp
  f4:	41 57                	push   %r15
  f6:	41 56                	push   %r14
  f8:	41 55                	push   %r13
  fa:	41 54                	push   %r12
  fc:	53                   	push   %rbx
  fd:	48 83 ec 58          	sub    $0x58,%rsp
 101:	85 f6                	test   %esi,%esi
 103:	89 75 b0             	mov    %esi,-0x50(%rbp)
 106:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
 10a:	0f 88 d3 01 00 00    	js     2e3 <aio_suspend+0x1f3>
 110:	48 63 c6             	movslq %esi,%rax
 113:	41 89 f7             	mov    %esi,%r15d
 116:	49 89 fd             	mov    %rdi,%r13
 119:	48 89 c3             	mov    %rax,%rbx
 11c:	48 c1 e0 03          	shl    $0x3,%rax
 120:	bf 00 00 00 00       	mov    $0x0,%edi
 125:	48 c1 e3 05          	shl    $0x5,%rbx
 129:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 12d:	48 83 c0 16          	add    $0x16,%rax
 131:	48 8d 53 10          	lea    0x10(%rbx),%rdx
 135:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
 139:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
 13d:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
 144:	48 29 d4             	sub    %rdx,%rsp
 147:	48 89 65 a8          	mov    %rsp,-0x58(%rbp)
 14b:	49 89 e6             	mov    %rsp,%r14
 14e:	48 29 c4             	sub    %rax,%rsp
 151:	e8 00 00 00 00       	callq  156 <aio_suspend+0x66>
 156:	45 85 ff             	test   %r15d,%r15d
 159:	49 89 e4             	mov    %rsp,%r12
 15c:	0f 84 61 01 00 00    	je     2c3 <aio_suspend+0x1d3>
 162:	44 89 f8             	mov    %r15d,%eax
 165:	c6 45 b7 00          	movb   $0x0,-0x49(%rbp)
 169:	45 31 ff             	xor    %r15d,%r15d
 16c:	83 e8 01             	sub    $0x1,%eax
 16f:	89 45 9c             	mov    %eax,-0x64(%rbp)
 172:	48 83 c0 01          	add    $0x1,%rax
 176:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 17a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 180:	4b 8b 7c fd 00       	mov    0x0(%r13,%r15,8),%rdi
 185:	44 89 fb             	mov    %r15d,%ebx
 188:	48 85 ff             	test   %rdi,%rdi
 18b:	74 3b                	je     1c8 <aio_suspend+0xd8>
 18d:	83 7f 70 73          	cmpl   $0x73,0x70(%rdi)
 191:	75 47                	jne    1da <aio_suspend+0xea>
 193:	e8 00 00 00 00       	callq  198 <aio_suspend+0xa8>
 198:	48 85 c0             	test   %rax,%rax
 19b:	4b 89 04 fc          	mov    %rax,(%r12,%r15,8)
 19f:	74 39                	je     1da <aio_suspend+0xea>
 1a1:	48 8b 70 30          	mov    0x30(%rax),%rsi
 1a5:	48 8d 5d cc          	lea    -0x34(%rbp),%rbx
 1a9:	49 c7 46 08 00 00 00 	movq   $0x0,0x8(%r14)
 1b0:	00 
 1b1:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
 1b8:	00 
 1b9:	c6 45 b7 01          	movb   $0x1,-0x49(%rbp)
 1bd:	49 89 5e 10          	mov    %rbx,0x10(%r14)
 1c1:	49 89 36             	mov    %rsi,(%r14)
 1c4:	4c 89 70 30          	mov    %r14,0x30(%rax)
 1c8:	41 8d 5f 01          	lea    0x1(%r15),%ebx
 1cc:	49 83 c6 20          	add    $0x20,%r14
 1d0:	49 83 c7 01          	add    $0x1,%r15
 1d4:	4c 3b 7d b8          	cmp    -0x48(%rbp),%r15
 1d8:	75 a6                	jne    180 <aio_suspend+0x90>
 1da:	3b 5d b0             	cmp    -0x50(%rbp),%ebx
 1dd:	0f 84 af 00 00 00    	je     292 <aio_suspend+0x1a2>
 1e3:	45 31 f6             	xor    %r14d,%r14d
 1e6:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
 1ea:	48 63 c3             	movslq %ebx,%rax
 1ed:	49 8d 7c c5 f8       	lea    -0x8(%r13,%rax,8),%rdi
 1f2:	48 c1 e0 05          	shl    $0x5,%rax
 1f6:	48 8d 74 06 e0       	lea    -0x20(%rsi,%rax,1),%rsi
 1fb:	eb 0b                	jmp    208 <aio_suspend+0x118>
 1fd:	0f 1f 00             	nopl   (%rax)
 200:	48 83 ef 08          	sub    $0x8,%rdi
 204:	48 83 ee 20          	sub    $0x20,%rsi
 208:	83 eb 01             	sub    $0x1,%ebx
 20b:	8d 53 01             	lea    0x1(%rbx),%edx
 20e:	85 d2                	test   %edx,%edx
 210:	7e 4e                	jle    260 <aio_suspend+0x170>
 212:	48 8b 17             	mov    (%rdi),%rdx
 215:	48 85 d2             	test   %rdx,%rdx
 218:	74 e6                	je     200 <aio_suspend+0x110>
 21a:	83 7a 70 73          	cmpl   $0x73,0x70(%rdx)
 21e:	75 e0                	jne    200 <aio_suspend+0x110>
 220:	48 63 c3             	movslq %ebx,%rax
 223:	49 8b 14 c4          	mov    (%r12,%rax,8),%rdx
 227:	48 85 d2             	test   %rdx,%rdx
 22a:	0f 84 9d 00 00 00    	je     2cd <aio_suspend+0x1dd>
 230:	48 8b 4a 30          	mov    0x30(%rdx),%rcx
 234:	48 85 c9             	test   %rcx,%rcx
 237:	74 c7                	je     200 <aio_suspend+0x110>
 239:	48 39 f1             	cmp    %rsi,%rcx
 23c:	75 05                	jne    243 <aio_suspend+0x153>
 23e:	eb 71                	jmp    2b1 <aio_suspend+0x1c1>
 240:	48 89 d1             	mov    %rdx,%rcx
 243:	48 8b 11             	mov    (%rcx),%rdx
 246:	48 85 d2             	test   %rdx,%rdx
 249:	74 b5                	je     200 <aio_suspend+0x110>
 24b:	48 39 d6             	cmp    %rdx,%rsi
 24e:	75 f0                	jne    240 <aio_suspend+0x150>
 250:	48 8b 02             	mov    (%rdx),%rax
 253:	48 89 01             	mov    %rax,(%rcx)
 256:	eb a8                	jmp    200 <aio_suspend+0x110>
 258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 25f:	00 
 260:	45 85 f6             	test   %r14d,%r14d
 263:	74 11                	je     276 <aio_suspend+0x186>
 265:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 26c <aio_suspend+0x17c>
 26c:	64 44 89 30          	mov    %r14d,%fs:(%rax)
 270:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
 276:	bf 00 00 00 00       	mov    $0x0,%edi
 27b:	e8 00 00 00 00       	callq  280 <aio_suspend+0x190>
 280:	44 89 f0             	mov    %r14d,%eax
 283:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
 287:	5b                   	pop    %rbx
 288:	41 5c                	pop    %r12
 28a:	41 5d                	pop    %r13
 28c:	41 5e                	pop    %r14
 28e:	41 5f                	pop    %r15
 290:	5d                   	pop    %rbp
 291:	c3                   	retq   
 292:	80 7d b7 00          	cmpb   $0x0,-0x49(%rbp)
 296:	0f 84 47 ff ff ff    	je     1e3 <aio_suspend+0xf3>
 29c:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
 2a0:	48 8d 7d cc          	lea    -0x34(%rbp),%rdi
 2a4:	e8 57 fd ff ff       	callq  0 <do_aio_misc_wait>
 2a9:	41 89 c6             	mov    %eax,%r14d
 2ac:	e9 35 ff ff ff       	jmpq   1e6 <aio_suspend+0xf6>
 2b1:	48 8d 4a 30          	lea    0x30(%rdx),%rcx
 2b5:	48 89 f2             	mov    %rsi,%rdx
 2b8:	48 8b 02             	mov    (%rdx),%rax
 2bb:	48 89 01             	mov    %rax,(%rcx)
 2be:	e9 3d ff ff ff       	jmpq   200 <aio_suspend+0x110>
 2c3:	31 db                	xor    %ebx,%ebx
 2c5:	45 31 f6             	xor    %r14d,%r14d
 2c8:	e9 19 ff ff ff       	jmpq   1e6 <aio_suspend+0xf6>
 2cd:	b9 00 00 00 00       	mov    $0x0,%ecx
 2d2:	b2 da                	mov    $0xda,%dl
 2d4:	be 00 00 00 00       	mov    $0x0,%esi
 2d9:	bf 00 00 00 00       	mov    $0x0,%edi
 2de:	e8 00 00 00 00       	callq  2e3 <aio_suspend+0x1f3>
 2e3:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2ea <aio_suspend+0x1fa>
 2ea:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
 2f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 2f6:	eb 8b                	jmp    283 <aio_suspend+0x193>
 2f8:	bf 00 00 00 00       	mov    $0x0,%edi
 2fd:	48 89 c3             	mov    %rax,%rbx
 300:	e8 00 00 00 00       	callq  305 <aio_suspend+0x215>
 305:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 309:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
 30d:	48 83 e8 08          	sub    $0x8,%rax
 311:	49 01 c5             	add    %rax,%r13
 314:	49 01 c4             	add    %rax,%r12
 317:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 31b:	48 8d 54 38 e0       	lea    -0x20(%rax,%rdi,1),%rdx
 320:	83 7d 9c ff          	cmpl   $0xffffffff,-0x64(%rbp)
 324:	74 26                	je     34c <aio_suspend+0x25c>
 326:	49 8b 45 00          	mov    0x0(%r13),%rax
 32a:	48 85 c0             	test   %rax,%rax
 32d:	74 06                	je     335 <aio_suspend+0x245>
 32f:	83 78 70 73          	cmpl   $0x73,0x70(%rax)
 333:	74 29                	je     35e <aio_suspend+0x26e>
 335:	8b 45 9c             	mov    -0x64(%rbp),%eax
 338:	49 83 ed 08          	sub    $0x8,%r13
 33c:	49 83 ec 08          	sub    $0x8,%r12
 340:	48 83 ea 20          	sub    $0x20,%rdx
 344:	83 e8 01             	sub    $0x1,%eax
 347:	89 45 9c             	mov    %eax,-0x64(%rbp)
 34a:	eb d4                	jmp    320 <aio_suspend+0x230>
 34c:	bf 00 00 00 00       	mov    $0x0,%edi
 351:	e8 00 00 00 00       	callq  356 <aio_suspend+0x266>
 356:	48 89 df             	mov    %rbx,%rdi
 359:	e8 00 00 00 00       	callq  35e <aio_suspend+0x26e>
 35e:	49 8b 04 24          	mov    (%r12),%rax
 362:	48 85 c0             	test   %rax,%rax
 365:	74 1f                	je     386 <aio_suspend+0x296>
 367:	48 8d 48 30          	lea    0x30(%rax),%rcx
 36b:	48 8b 40 30          	mov    0x30(%rax),%rax
 36f:	48 85 c0             	test   %rax,%rax
 372:	74 c1                	je     335 <aio_suspend+0x245>
 374:	48 39 d0             	cmp    %rdx,%rax
 377:	74 26                	je     39f <aio_suspend+0x2af>
 379:	48 89 c1             	mov    %rax,%rcx
 37c:	48 8b 00             	mov    (%rax),%rax
 37f:	48 85 c0             	test   %rax,%rax
 382:	75 f0                	jne    374 <aio_suspend+0x284>
 384:	eb af                	jmp    335 <aio_suspend+0x245>
 386:	b9 00 00 00 00       	mov    $0x0,%ecx
 38b:	ba 49 00 00 00       	mov    $0x49,%edx
 390:	be 00 00 00 00       	mov    $0x0,%esi
 395:	bf 00 00 00 00       	mov    $0x0,%edi
 39a:	e8 00 00 00 00       	callq  39f <aio_suspend+0x2af>
 39f:	48 8b 00             	mov    (%rax),%rax
 3a2:	48 89 01             	mov    %rax,(%rcx)
 3a5:	eb 8e                	jmp    335 <aio_suspend+0x245>

aio_write.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <aio_write>:
   0:	48 83 ec 08          	sub    $0x8,%rsp
   4:	be 01 00 00 00       	mov    $0x1,%esi
   9:	e8 00 00 00 00       	callq  e <aio_write+0xe>
   e:	48 85 c0             	test   %rax,%rax
  11:	0f 94 c0             	sete   %al
  14:	48 83 c4 08          	add    $0x8,%rsp
  18:	0f b6 c0             	movzbl %al,%eax
  1b:	f7 d8                	neg    %eax
  1d:	c3                   	retq   

aio_write64.o:     file format elf64-x86-64


lio_listio.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__lio_listio64_item_notify>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 55                	push   %r13
   a:	41 54                	push   %r12
   c:	53                   	push   %rbx
   d:	48 83 ec 78          	sub    $0x78,%rsp
  11:	83 ff 01             	cmp    $0x1,%edi
  14:	89 bd 74 ff ff ff    	mov    %edi,-0x8c(%rbp)
  1a:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
  21:	0f 87 b9 02 00 00    	ja     2e0 <__lio_listio64_item_notify+0x2e0>
  27:	48 63 c2             	movslq %edx,%rax
  2a:	48 89 a5 68 ff ff ff 	mov    %rsp,-0x98(%rbp)
  31:	49 89 f5             	mov    %rsi,%r13
  34:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  3b:	48 8d 04 c5 16 00 00 	lea    0x16(,%rax,8),%rax
  42:	00 
  43:	41 89 d7             	mov    %edx,%r15d
  46:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
  4d:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
  54:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  58:	48 29 c4             	sub    %rax,%rsp
  5b:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
  62:	00 
  63:	49 89 e6             	mov    %rsp,%r14
  66:	0f 84 f4 02 00 00    	je     360 <__lio_listio64_item_notify+0x360>
  6c:	bf 00 00 00 00       	mov    $0x0,%edi
  71:	e8 00 00 00 00       	callq  76 <__lio_listio64_item_notify+0x76>
  76:	45 85 ff             	test   %r15d,%r15d
  79:	7e 5c                	jle    d7 <__lio_listio64_item_notify+0xd7>
  7b:	41 8d 47 ff          	lea    -0x1(%r15),%eax
  7f:	45 31 e4             	xor    %r12d,%r12d
  82:	48 8d 1c c5 08 00 00 	lea    0x8(,%rax,8),%rbx
  89:	00 
  8a:	eb 28                	jmp    b4 <__lio_listio64_item_notify+0xb4>
  8c:	0f 1f 40 00          	nopl   0x0(%rax)
  90:	e8 00 00 00 00       	callq  95 <__lio_listio64_item_notify+0x95>
  95:	48 85 c0             	test   %rax,%rax
  98:	4b 89 04 26          	mov    %rax,(%r14,%r12,1)
  9c:	0f 84 46 01 00 00    	je     1e8 <__lio_listio64_item_notify+0x1e8>
  a2:	8b 45 8c             	mov    -0x74(%rbp),%eax
  a5:	83 c0 01             	add    $0x1,%eax
  a8:	89 45 8c             	mov    %eax,-0x74(%rbp)
  ab:	49 83 c4 08          	add    $0x8,%r12
  af:	49 39 dc             	cmp    %rbx,%r12
  b2:	74 23                	je     d7 <__lio_listio64_item_notify+0xd7>
  b4:	4b 8b 7c 25 00       	mov    0x0(%r13,%r12,1),%rdi
  b9:	48 85 ff             	test   %rdi,%rdi
  bc:	74 08                	je     c6 <__lio_listio64_item_notify+0xc6>
  be:	8b 77 04             	mov    0x4(%rdi),%esi
  c1:	83 fe 02             	cmp    $0x2,%esi
  c4:	75 ca                	jne    90 <__lio_listio64_item_notify+0x90>
  c6:	4b c7 04 26 00 00 00 	movq   $0x0,(%r14,%r12,1)
  cd:	00 
  ce:	49 83 c4 08          	add    $0x8,%r12
  d2:	49 39 dc             	cmp    %rbx,%r12
  d5:	75 dd                	jne    b4 <__lio_listio64_item_notify+0xb4>
  d7:	8b 45 8c             	mov    -0x74(%rbp),%eax
  da:	85 c0                	test   %eax,%eax
  dc:	0f 84 d6 01 00 00    	je     2b8 <__lio_listio64_item_notify+0x2b8>
  e2:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  e8:	85 c0                	test   %eax,%eax
  ea:	0f 84 08 01 00 00    	je     1f8 <__lio_listio64_item_notify+0x1f8>
  f0:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
  f7:	48 c1 e7 05          	shl    $0x5,%rdi
  fb:	48 83 c7 48          	add    $0x48,%rdi
  ff:	e8 00 00 00 00       	callq  104 <__lio_listio64_item_notify+0x104>
 104:	48 85 c0             	test   %rax,%rax
 107:	0f 84 6a 02 00 00    	je     377 <__lio_listio64_item_notify+0x377>
 10d:	31 f6                	xor    %esi,%esi
 10f:	45 85 ff             	test   %r15d,%r15d
 112:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
 119:	48 8d 48 48          	lea    0x48(%rax),%rcx
 11d:	4c 8d 58 08          	lea    0x8(%rax),%r11
 121:	7e 54                	jle    177 <__lio_listio64_item_notify+0x177>
 123:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 128:	49 8b 3c f6          	mov    (%r14,%rsi,8),%rdi
 12c:	48 85 ff             	test   %rdi,%rdi
 12f:	74 39                	je     16a <__lio_listio64_item_notify+0x16a>
 131:	4d 8b 54 f5 00       	mov    0x0(%r13,%rsi,8),%r10
 136:	4d 85 d2             	test   %r10,%r10
 139:	0f 84 81 02 00 00    	je     3c0 <__lio_listio64_item_notify+0x3c0>
 13f:	41 83 7a 04 02       	cmpl   $0x2,0x4(%r10)
 144:	74 24                	je     16a <__lio_listio64_item_notify+0x16a>
 146:	4c 8b 57 30          	mov    0x30(%rdi),%r10
 14a:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
 151:	00 
 152:	48 89 41 10          	mov    %rax,0x10(%rcx)
 156:	4c 89 59 18          	mov    %r11,0x18(%rcx)
 15a:	4c 89 11             	mov    %r10,(%rcx)
 15d:	48 89 4f 30          	mov    %rcx,0x30(%rdi)
 161:	8b 7d 8c             	mov    -0x74(%rbp),%edi
 164:	83 c7 01             	add    $0x1,%edi
 167:	89 7d 8c             	mov    %edi,-0x74(%rbp)
 16a:	48 83 c6 01          	add    $0x1,%rsi
 16e:	48 83 c1 20          	add    $0x20,%rcx
 172:	41 39 f7             	cmp    %esi,%r15d
 175:	7f b1                	jg     128 <__lio_listio64_item_notify+0x128>
 177:	48 8b 9d 78 ff ff ff 	mov    -0x88(%rbp),%rbx
 17e:	8b 55 8c             	mov    -0x74(%rbp),%edx
 181:	89 10                	mov    %edx,(%rax)
 183:	48 8b 13             	mov    (%rbx),%rdx
 186:	48 89 50 08          	mov    %rdx,0x8(%rax)
 18a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
 18e:	48 89 50 10          	mov    %rdx,0x10(%rax)
 192:	48 8b 53 10          	mov    0x10(%rbx),%rdx
 196:	48 89 50 18          	mov    %rdx,0x18(%rax)
 19a:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 19e:	48 89 50 20          	mov    %rdx,0x20(%rax)
 1a2:	48 8b 53 20          	mov    0x20(%rbx),%rdx
 1a6:	48 89 50 28          	mov    %rdx,0x28(%rax)
 1aa:	48 8b 53 28          	mov    0x28(%rbx),%rdx
 1ae:	48 89 50 30          	mov    %rdx,0x30(%rax)
 1b2:	48 8b 53 30          	mov    0x30(%rbx),%rdx
 1b6:	48 89 50 38          	mov    %rdx,0x38(%rax)
 1ba:	48 8b 53 38          	mov    0x38(%rbx),%rdx
 1be:	48 89 50 40          	mov    %rdx,0x40(%rax)
 1c2:	bf 00 00 00 00       	mov    $0x0,%edi
 1c7:	e8 00 00 00 00       	callq  1cc <__lio_listio64_item_notify+0x1cc>
 1cc:	8b 45 80             	mov    -0x80(%rbp),%eax
 1cf:	48 8b a5 68 ff ff ff 	mov    -0x98(%rbp),%rsp
 1d6:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
 1da:	5b                   	pop    %rbx
 1db:	41 5c                	pop    %r12
 1dd:	41 5d                	pop    %r13
 1df:	41 5e                	pop    %r14
 1e1:	41 5f                	pop    %r15
 1e3:	5d                   	pop    %rbp
 1e4:	c3                   	retq   
 1e5:	0f 1f 00             	nopl   (%rax)
 1e8:	c7 45 80 ff ff ff ff 	movl   $0xffffffff,-0x80(%rbp)
 1ef:	e9 b7 fe ff ff       	jmpq   ab <__lio_listio64_item_notify+0xab>
 1f4:	0f 1f 40 00          	nopl   0x0(%rax)
 1f8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 1ff:	48 89 e3             	mov    %rsp,%rbx
 202:	31 c9                	xor    %ecx,%ecx
 204:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
 20b:	4c 8d 5d 80          	lea    -0x80(%rbp),%r11
 20f:	4c 8d 55 8c          	lea    -0x74(%rbp),%r10
 213:	48 c1 e0 05          	shl    $0x5,%rax
 217:	48 83 c0 10          	add    $0x10,%rax
 21b:	48 29 c4             	sub    %rax,%rsp
 21e:	45 85 ff             	test   %r15d,%r15d
 221:	48 89 e0             	mov    %rsp,%rax
 224:	7e 58                	jle    27e <__lio_listio64_item_notify+0x27e>
 226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 22d:	00 00 00 
 230:	49 8b 34 ce          	mov    (%r14,%rcx,8),%rsi
 234:	48 85 f6             	test   %rsi,%rsi
 237:	74 38                	je     271 <__lio_listio64_item_notify+0x271>
 239:	49 8b 7c cd 00       	mov    0x0(%r13,%rcx,8),%rdi
 23e:	48 85 ff             	test   %rdi,%rdi
 241:	0f 84 92 01 00 00    	je     3d9 <__lio_listio64_item_notify+0x3d9>
 247:	83 7f 04 02          	cmpl   $0x2,0x4(%rdi)
 24b:	74 24                	je     271 <__lio_listio64_item_notify+0x271>
 24d:	48 8b 7e 30          	mov    0x30(%rsi),%rdi
 251:	4c 89 58 08          	mov    %r11,0x8(%rax)
 255:	4c 89 50 10          	mov    %r10,0x10(%rax)
 259:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
 260:	00 
 261:	48 89 38             	mov    %rdi,(%rax)
 264:	48 89 46 30          	mov    %rax,0x30(%rsi)
 268:	8b 75 8c             	mov    -0x74(%rbp),%esi
 26b:	83 c6 01             	add    $0x1,%esi
 26e:	89 75 8c             	mov    %esi,-0x74(%rbp)
 271:	48 83 c1 01          	add    $0x1,%rcx
 275:	48 83 c0 20          	add    $0x20,%rax
 279:	41 39 cf             	cmp    %ecx,%r15d
 27c:	7f b2                	jg     230 <__lio_listio64_item_notify+0x230>
 27e:	8b 55 8c             	mov    -0x74(%rbp),%edx
 281:	85 d2                	test   %edx,%edx
 283:	0f 85 7f 00 00 00    	jne    308 <__lio_listio64_item_notify+0x308>
 289:	8b 45 80             	mov    -0x80(%rbp),%eax
 28c:	85 c0                	test   %eax,%eax
 28e:	74 1d                	je     2ad <__lio_listio64_item_notify+0x2ad>
 290:	83 f8 04             	cmp    $0x4,%eax
 293:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 29a <__lio_listio64_item_notify+0x29a>
 29a:	c7 45 80 ff ff ff ff 	movl   $0xffffffff,-0x80(%rbp)
 2a1:	0f 95 c0             	setne  %al
 2a4:	0f b6 c0             	movzbl %al,%eax
 2a7:	83 c0 04             	add    $0x4,%eax
 2aa:	64 89 02             	mov    %eax,%fs:(%rdx)
 2ad:	48 89 dc             	mov    %rbx,%rsp
 2b0:	e9 0d ff ff ff       	jmpq   1c2 <__lio_listio64_item_notify+0x1c2>
 2b5:	0f 1f 00             	nopl   (%rax)
 2b8:	bf 00 00 00 00       	mov    $0x0,%edi
 2bd:	e8 00 00 00 00       	callq  2c2 <__lio_listio64_item_notify+0x2c2>
 2c2:	83 bd 74 ff ff ff 01 	cmpl   $0x1,-0x8c(%rbp)
 2c9:	0f 85 fd fe ff ff    	jne    1cc <__lio_listio64_item_notify+0x1cc>
 2cf:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
 2d6:	e8 00 00 00 00       	callq  2db <__lio_listio64_item_notify+0x2db>
 2db:	e9 ec fe ff ff       	jmpq   1cc <__lio_listio64_item_notify+0x1cc>
 2e0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e7 <__lio_listio64_item_notify+0x2e7>
 2e7:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
 2ee:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
 2f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 2f7:	5b                   	pop    %rbx
 2f8:	41 5c                	pop    %r12
 2fa:	41 5d                	pop    %r13
 2fc:	41 5e                	pop    %r14
 2fe:	41 5f                	pop    %r15
 300:	5d                   	pop    %rbp
 301:	c3                   	retq   
 302:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 308:	bf 00 00 00 00       	mov    $0x0,%edi
 30d:	89 95 78 ff ff ff    	mov    %edx,-0x88(%rbp)
 313:	e8 00 00 00 00       	callq  318 <__lio_listio64_item_notify+0x318>
 318:	48 8d 7d 8c          	lea    -0x74(%rbp),%rdi
 31c:	41 b8 ca 00 00 00    	mov    $0xca,%r8d
 322:	be 80 00 00 00       	mov    $0x80,%esi
 327:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
 32d:	eb 08                	jmp    337 <__lio_listio64_item_notify+0x337>
 32f:	90                   	nop
 330:	8b 55 8c             	mov    -0x74(%rbp),%edx
 333:	85 d2                	test   %edx,%edx
 335:	74 19                	je     350 <__lio_listio64_item_notify+0x350>
 337:	45 31 d2             	xor    %r10d,%r10d
 33a:	44 89 c0             	mov    %r8d,%eax
 33d:	0f 05                	syscall 
 33f:	83 f8 f5             	cmp    $0xfffffff5,%eax
 342:	74 ec                	je     330 <__lio_listio64_item_notify+0x330>
 344:	83 f8 fc             	cmp    $0xfffffffc,%eax
 347:	75 48                	jne    391 <__lio_listio64_item_notify+0x391>
 349:	c7 45 80 04 00 00 00 	movl   $0x4,-0x80(%rbp)
 350:	bf 00 00 00 00       	mov    $0x0,%edi
 355:	e8 00 00 00 00       	callq  35a <__lio_listio64_item_notify+0x35a>
 35a:	e9 2a ff ff ff       	jmpq   289 <__lio_listio64_item_notify+0x289>
 35f:	90                   	nop
 360:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 364:	c7 45 9c 01 00 00 00 	movl   $0x1,-0x64(%rbp)
 36b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
 372:	e9 f5 fc ff ff       	jmpq   6c <__lio_listio64_item_notify+0x6c>
 377:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 37e <__lio_listio64_item_notify+0x37e>
 37e:	c7 45 80 ff ff ff ff 	movl   $0xffffffff,-0x80(%rbp)
 385:	64 c7 00 0b 00 00 00 	movl   $0xb,%fs:(%rax)
 38c:	e9 31 fe ff ff       	jmpq   1c2 <__lio_listio64_item_notify+0x1c2>
 391:	83 f8 92             	cmp    $0xffffff92,%eax
 394:	75 09                	jne    39f <__lio_listio64_item_notify+0x39f>
 396:	c7 45 80 0b 00 00 00 	movl   $0xb,-0x80(%rbp)
 39d:	eb b1                	jmp    350 <__lio_listio64_item_notify+0x350>
 39f:	85 c0                	test   %eax,%eax
 3a1:	74 ad                	je     350 <__lio_listio64_item_notify+0x350>
 3a3:	b9 00 00 00 00       	mov    $0x0,%ecx
 3a8:	ba 98 00 00 00       	mov    $0x98,%edx
 3ad:	be 00 00 00 00       	mov    $0x0,%esi
 3b2:	bf 00 00 00 00       	mov    $0x0,%edi
 3b7:	e8 00 00 00 00       	callq  3bc <__lio_listio64_item_notify+0x3bc>
 3bc:	0f 1f 40 00          	nopl   0x0(%rax)
 3c0:	b9 00 00 00 00       	mov    $0x0,%ecx
 3c5:	ba c8 00 00 00       	mov    $0xc8,%edx
 3ca:	be 00 00 00 00       	mov    $0x0,%esi
 3cf:	bf 00 00 00 00       	mov    $0x0,%edi
 3d4:	e8 00 00 00 00       	callq  3d9 <__lio_listio64_item_notify+0x3d9>
 3d9:	b9 00 00 00 00       	mov    $0x0,%ecx
 3de:	ba 84 00 00 00       	mov    $0x84,%edx
 3e3:	be 00 00 00 00       	mov    $0x0,%esi
 3e8:	bf 00 00 00 00       	mov    $0x0,%edi
 3ed:	e8 00 00 00 00       	callq  3f2 <__lio_listio64_item_notify+0x3f2>

lio_listio64.o:     file format elf64-x86-64


aio_sigqueue.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__aio_sigqueue>:
   0:	41 54                	push   %r12
   2:	31 c0                	xor    %eax,%eax
   4:	b9 10 00 00 00       	mov    $0x10,%ecx
   9:	49 89 f4             	mov    %rsi,%r12
   c:	55                   	push   %rbp
   d:	89 fd                	mov    %edi,%ebp
   f:	53                   	push   %rbx
  10:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  14:	48 89 e7             	mov    %rsp,%rdi
  17:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  1a:	89 54 24 10          	mov    %edx,0x10(%rsp)
  1e:	89 2c 24             	mov    %ebp,(%rsp)
  21:	c7 44 24 08 fc ff ff 	movl   $0xfffffffc,0x8(%rsp)
  28:	ff 
  29:	e8 00 00 00 00       	callq  2e <__aio_sigqueue+0x2e>
  2e:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
  33:	89 44 24 14          	mov    %eax,0x14(%rsp)
  37:	48 89 e2             	mov    %rsp,%rdx
  3a:	48 63 7c 24 10       	movslq 0x10(%rsp),%rdi
  3f:	48 63 f5             	movslq %ebp,%rsi
  42:	b8 81 00 00 00       	mov    $0x81,%eax
  47:	0f 05                	syscall 
  49:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  4f:	77 09                	ja     5a <__aio_sigqueue+0x5a>
  51:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
  55:	5b                   	pop    %rbx
  56:	5d                   	pop    %rbp
  57:	41 5c                	pop    %r12
  59:	c3                   	retq   
  5a:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 61 <__aio_sigqueue+0x61>
  61:	f7 d8                	neg    %eax
  63:	64 89 02             	mov    %eax,%fs:(%rdx)
  66:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  6a:	eb e5                	jmp    51 <__aio_sigqueue+0x51>

aio_notify.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <notify_func_wrapper>:
   0:	41 54                	push   %r12
   2:	55                   	push   %rbp
   3:	53                   	push   %rbx
   4:	48 89 fb             	mov    %rdi,%rbx
   7:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   b:	48 89 e7             	mov    %rsp,%rdi
   e:	e8 00 00 00 00       	callq  13 <notify_func_wrapper+0x13>
  13:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  19:	31 d2                	xor    %edx,%edx
  1b:	48 89 e6             	mov    %rsp,%rsi
  1e:	bf 02 00 00 00       	mov    $0x2,%edi
  23:	b8 0e 00 00 00       	mov    $0xe,%eax
  28:	0f 05                	syscall 
  2a:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	4c 8b 23             	mov    (%rbx),%r12
  34:	e8 00 00 00 00       	callq  39 <notify_func_wrapper+0x39>
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	41 ff d4             	callq  *%r12
  3f:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
  43:	31 c0                	xor    %eax,%eax
  45:	5b                   	pop    %rbx
  46:	5d                   	pop    %rbp
  47:	41 5c                	pop    %r12
  49:	c3                   	retq   
  4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000050 <__aio_notify_only>:
  50:	53                   	push   %rbx
  51:	8b 57 0c             	mov    0xc(%rdi),%edx
  54:	48 89 fb             	mov    %rdi,%rbx
  57:	83 fa 02             	cmp    $0x2,%edx
  5a:	74 23                	je     7f <__aio_notify_only+0x2f>
  5c:	31 c0                	xor    %eax,%eax
  5e:	85 d2                	test   %edx,%edx
  60:	74 06                	je     68 <__aio_notify_only+0x18>
  62:	5b                   	pop    %rbx
  63:	c3                   	retq   
  64:	0f 1f 40 00          	nopl   0x0(%rax)
  68:	e8 00 00 00 00       	callq  6d <__aio_notify_only+0x1d>
  6d:	8b 7b 08             	mov    0x8(%rbx),%edi
  70:	48 8b 33             	mov    (%rbx),%rsi
  73:	89 c2                	mov    %eax,%edx
  75:	e8 00 00 00 00       	callq  7a <__aio_notify_only+0x2a>
  7a:	5b                   	pop    %rbx
  7b:	c1 f8 1f             	sar    $0x1f,%eax
  7e:	c3                   	retq   
  7f:	5b                   	pop    %rbx
  80:	e9 00 00 00 00       	jmpq   85 <__aio_notify_only+0x35>
  85:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  8c:	00 00 00 00 

0000000000000090 <__aio_notify>:
  90:	41 56                	push   %r14
  92:	41 55                	push   %r13
  94:	41 54                	push   %r12
  96:	55                   	push   %rbp
  97:	53                   	push   %rbx
  98:	4c 8b 67 28          	mov    0x28(%rdi),%r12
  9c:	48 89 fb             	mov    %rdi,%rbx
  9f:	41 8b 44 24 2c       	mov    0x2c(%r12),%eax
  a4:	49 8d 7c 24 20       	lea    0x20(%r12),%rdi
  a9:	83 f8 02             	cmp    $0x2,%eax
  ac:	0f 84 0f 01 00 00    	je     1c1 <__aio_notify+0x131>
  b2:	85 c0                	test   %eax,%eax
  b4:	0f 84 ae 00 00 00    	je     168 <__aio_notify+0xd8>
  ba:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
  be:	41 bd ca 00 00 00    	mov    $0xca,%r13d
  c4:	48 85 db             	test   %rbx,%rbx
  c7:	75 0f                	jne    d8 <__aio_notify+0x48>
  c9:	eb 54                	jmp    11f <__aio_notify+0x8f>
  cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  d0:	48 85 ed             	test   %rbp,%rbp
  d3:	74 4a                	je     11f <__aio_notify+0x8f>
  d5:	48 89 eb             	mov    %rbp,%rbx
  d8:	4c 8b 73 18          	mov    0x18(%rbx),%r14
  dc:	48 8b 2b             	mov    (%rbx),%rbp
  df:	4d 85 f6             	test   %r14,%r14
  e2:	74 4c                	je     130 <__aio_notify+0xa0>
  e4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
  e8:	83 2f 01             	subl   $0x1,(%rdi)
  eb:	75 e3                	jne    d0 <__aio_notify+0x40>
  ed:	41 8b 56 0c          	mov    0xc(%r14),%edx
  f1:	83 fa 02             	cmp    $0x2,%edx
  f4:	0f 84 b6 00 00 00    	je     1b0 <__aio_notify+0x120>
  fa:	85 d2                	test   %edx,%edx
  fc:	75 17                	jne    115 <__aio_notify+0x85>
  fe:	e8 00 00 00 00       	callq  103 <__aio_notify+0x73>
 103:	41 8b 7e 08          	mov    0x8(%r14),%edi
 107:	49 8b 36             	mov    (%r14),%rsi
 10a:	89 c2                	mov    %eax,%edx
 10c:	e8 00 00 00 00       	callq  111 <__aio_notify+0x81>
 111:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
 115:	e8 00 00 00 00       	callq  11a <__aio_notify+0x8a>
 11a:	48 85 ed             	test   %rbp,%rbp
 11d:	75 b6                	jne    d5 <__aio_notify+0x45>
 11f:	5b                   	pop    %rbx
 120:	5d                   	pop    %rbp
 121:	41 5c                	pop    %r12
 123:	41 5d                	pop    %r13
 125:	41 5e                	pop    %r14
 127:	c3                   	retq   
 128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 12f:	00 
 130:	48 8b 43 08          	mov    0x8(%rbx),%rax
 134:	48 85 c0             	test   %rax,%rax
 137:	74 08                	je     141 <__aio_notify+0xb1>
 139:	49 83 7c 24 78 ff    	cmpq   $0xffffffffffffffff,0x78(%r12)
 13f:	74 67                	je     1a8 <__aio_notify+0x118>
 141:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
 145:	8b 07                	mov    (%rdi),%eax
 147:	85 c0                	test   %eax,%eax
 149:	7e 85                	jle    d0 <__aio_notify+0x40>
 14b:	83 2f 01             	subl   $0x1,(%rdi)
 14e:	75 80                	jne    d0 <__aio_notify+0x40>
 150:	ba 01 00 00 00       	mov    $0x1,%edx
 155:	44 89 e8             	mov    %r13d,%eax
 158:	be 81 00 00 00       	mov    $0x81,%esi
 15d:	0f 05                	syscall 
 15f:	e9 6c ff ff ff       	jmpq   d0 <__aio_notify+0x40>
 164:	0f 1f 40 00          	nopl   0x0(%rax)
 168:	e8 00 00 00 00       	callq  16d <__aio_notify+0xdd>
 16d:	41 8b 7c 24 28       	mov    0x28(%r12),%edi
 172:	49 8b 74 24 20       	mov    0x20(%r12),%rsi
 177:	89 c2                	mov    %eax,%edx
 179:	e8 00 00 00 00       	callq  17e <__aio_notify+0xee>
 17e:	85 c0                	test   %eax,%eax
 180:	0f 89 34 ff ff ff    	jns    ba <__aio_notify+0x2a>
 186:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 18d <__aio_notify+0xfd>
 18d:	49 c7 44 24 78 ff ff 	movq   $0xffffffffffffffff,0x78(%r12)
 194:	ff ff 
 196:	64 8b 00             	mov    %fs:(%rax),%eax
 199:	41 89 44 24 70       	mov    %eax,0x70(%r12)
 19e:	e9 17 ff ff ff       	jmpq   ba <__aio_notify+0x2a>
 1a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 1a8:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
 1ae:	eb 91                	jmp    141 <__aio_notify+0xb1>
 1b0:	4c 89 f7             	mov    %r14,%rdi
 1b3:	e8 00 00 00 00       	callq  1b8 <__aio_notify+0x128>
 1b8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
 1bc:	e9 54 ff ff ff       	jmpq   115 <__aio_notify+0x85>
 1c1:	e8 00 00 00 00       	callq  1c6 <__aio_notify+0x136>
 1c6:	85 c0                	test   %eax,%eax
 1c8:	75 bc                	jne    186 <__aio_notify+0xf6>
 1ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 1d0:	e9 e5 fe ff ff       	jmpq   ba <__aio_notify+0x2a>

Disassembly of section .text.unlikely:

0000000000000000 <__aio_notify_only.part.0>:
   0:	41 54                	push   %r12
   2:	55                   	push   %rbp
   3:	48 89 fd             	mov    %rdi,%rbp
   6:	53                   	push   %rbx
   7:	48 83 ec 50          	sub    $0x50,%rsp
   b:	4c 8b 67 18          	mov    0x18(%rdi),%r12
   f:	4d 85 e4             	test   %r12,%r12
  12:	75 1e                	jne    32 <__aio_notify_only.part.0+0x32>
  14:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  19:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
  1e:	e8 00 00 00 00       	callq  23 <__aio_notify_only.part.0+0x23>
  23:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  28:	be 01 00 00 00       	mov    $0x1,%esi
  2d:	e8 00 00 00 00       	callq  32 <__aio_notify_only.part.0+0x32>
  32:	bf 10 00 00 00       	mov    $0x10,%edi
  37:	e8 00 00 00 00       	callq  3c <__aio_notify_only.part.0+0x3c>
  3c:	83 ca ff             	or     $0xffffffff,%edx
  3f:	48 85 c0             	test   %rax,%rax
  42:	48 89 c3             	mov    %rax,%rbx
  45:	74 33                	je     7a <__aio_notify_only.part.0+0x7a>
  47:	48 8b 45 10          	mov    0x10(%rbp),%rax
  4b:	ba 00 00 00 00       	mov    $0x0,%edx
  50:	48 89 d9             	mov    %rbx,%rcx
  53:	4c 89 e6             	mov    %r12,%rsi
  56:	48 89 e7             	mov    %rsp,%rdi
  59:	48 89 03             	mov    %rax,(%rbx)
  5c:	48 8b 45 00          	mov    0x0(%rbp),%rax
  60:	48 89 43 08          	mov    %rax,0x8(%rbx)
  64:	e8 00 00 00 00       	callq  69 <__aio_notify_only.part.0+0x69>
  69:	31 d2                	xor    %edx,%edx
  6b:	85 c0                	test   %eax,%eax
  6d:	79 0b                	jns    7a <__aio_notify_only.part.0+0x7a>
  6f:	48 89 df             	mov    %rbx,%rdi
  72:	e8 00 00 00 00       	callq  77 <__aio_notify_only.part.0+0x77>
  77:	83 ca ff             	or     $0xffffffff,%edx
  7a:	48 83 c4 50          	add    $0x50,%rsp
  7e:	89 d0                	mov    %edx,%eax
  80:	5b                   	pop    %rbx
  81:	5d                   	pop    %rbp
  82:	41 5c                	pop    %r12
  84:	c3                   	retq   

timer_create.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__timer_create_new>:
   0:	41 56                	push   %r14
   2:	41 55                	push   %r13
   4:	41 54                	push   %r12
   6:	49 89 d4             	mov    %rdx,%r12
   9:	55                   	push   %rbp
   a:	48 89 f5             	mov    %rsi,%rbp
   d:	53                   	push   %rbx
   e:	89 fb                	mov    %edi,%ebx
  10:	48 83 ec 50          	sub    $0x50,%rsp
  14:	83 ff 02             	cmp    $0x2,%edi
  17:	74 77                	je     90 <__timer_create_new+0x90>
  19:	83 ff 03             	cmp    $0x3,%edi
  1c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
  21:	0f 44 d8             	cmove  %eax,%ebx
  24:	48 85 ed             	test   %rbp,%rbp
  27:	0f 84 c1 01 00 00    	je     1ee <__timer_create_new+0x1ee>
  2d:	83 7d 0c 02          	cmpl   $0x2,0xc(%rbp)
  31:	0f 84 8b 00 00 00    	je     c2 <__timer_create_new+0xc2>
  37:	bf 08 00 00 00       	mov    $0x8,%edi
  3c:	e8 00 00 00 00       	callq  41 <__timer_create_new+0x41>
  41:	48 85 c0             	test   %rax,%rax
  44:	49 89 c0             	mov    %rax,%r8
  47:	0f 84 99 01 00 00    	je     1e6 <__timer_create_new+0x1e6>
  4d:	0f 1f 00             	nopl   (%rax)
  50:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  55:	48 89 ee             	mov    %rbp,%rsi
  58:	48 63 fb             	movslq %ebx,%rdi
  5b:	b8 de 00 00 00       	mov    $0xde,%eax
  60:	0f 05                	syscall 
  62:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  68:	77 2d                	ja     97 <__timer_create_new+0x97>
  6a:	83 f8 ff             	cmp    $0xffffffff,%eax
  6d:	74 39                	je     a8 <__timer_create_new+0xa8>
  6f:	8b 55 0c             	mov    0xc(%rbp),%edx
  72:	41 89 10             	mov    %edx,(%r8)
  75:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  79:	41 89 50 04          	mov    %edx,0x4(%r8)
  7d:	4d 89 04 24          	mov    %r8,(%r12)
  81:	48 83 c4 50          	add    $0x50,%rsp
  85:	5b                   	pop    %rbx
  86:	5d                   	pop    %rbp
  87:	41 5c                	pop    %r12
  89:	41 5d                	pop    %r13
  8b:	41 5e                	pop    %r14
  8d:	c3                   	retq   
  8e:	66 90                	xchg   %ax,%ax
  90:	bb fa ff ff ff       	mov    $0xfffffffa,%ebx
  95:	eb 8d                	jmp    24 <__timer_create_new+0x24>
  97:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 9e <__timer_create_new+0x9e>
  9e:	f7 d8                	neg    %eax
  a0:	64 89 02             	mov    %eax,%fs:(%rdx)
  a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  a8:	4c 89 c7             	mov    %r8,%rdi
  ab:	e8 00 00 00 00       	callq  b0 <__timer_create_new+0xb0>
  b0:	48 83 c4 50          	add    $0x50,%rsp
  b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  b9:	5b                   	pop    %rbx
  ba:	5d                   	pop    %rbp
  bb:	41 5c                	pop    %r12
  bd:	41 5d                	pop    %r13
  bf:	41 5e                	pop    %r14
  c1:	c3                   	retq   
  c2:	be 00 00 00 00       	mov    $0x0,%esi
  c7:	bf 00 00 00 00       	mov    $0x0,%edi
  cc:	e8 00 00 00 00       	callq  d1 <__timer_create_new+0xd1>
  d1:	83 3d 00 00 00 00 00 	cmpl   $0x0,0x0(%rip)        # d8 <__timer_create_new+0xd8>
  d8:	75 13                	jne    ed <__timer_create_new+0xed>
  da:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # e1 <__timer_create_new+0xe1>
  e1:	64 c7 00 0b 00 00 00 	movl   $0xb,%fs:(%rax)
  e8:	83 c8 ff             	or     $0xffffffff,%eax
  eb:	eb 94                	jmp    81 <__timer_create_new+0x81>
  ed:	bf 58 00 00 00       	mov    $0x58,%edi
  f2:	e8 00 00 00 00       	callq  f7 <__timer_create_new+0xf7>
  f7:	49 89 c5             	mov    %rax,%r13
  fa:	83 c8 ff             	or     $0xffffffff,%eax
  fd:	4d 85 ed             	test   %r13,%r13
 100:	0f 84 7b ff ff ff    	je     81 <__timer_create_new+0x81>
 106:	48 8b 45 00          	mov    0x0(%rbp),%rax
 10a:	4d 8d 75 18          	lea    0x18(%r13),%r14
 10e:	4c 89 f7             	mov    %r14,%rdi
 111:	49 89 45 10          	mov    %rax,0x10(%r13)
 115:	48 8b 45 10          	mov    0x10(%rbp),%rax
 119:	41 c7 45 00 02 00 00 	movl   $0x2,0x0(%r13)
 120:	00 
 121:	49 89 45 08          	mov    %rax,0x8(%r13)
 125:	e8 00 00 00 00       	callq  12a <__timer_create_new+0x12a>
 12a:	48 8b 45 18          	mov    0x18(%rbp),%rax
 12e:	48 85 c0             	test   %rax,%rax
 131:	74 2c                	je     15f <__timer_create_new+0x15f>
 133:	8b 10                	mov    (%rax),%edx
 135:	41 89 55 18          	mov    %edx,0x18(%r13)
 139:	8b 50 04             	mov    0x4(%rax),%edx
 13c:	41 89 55 1c          	mov    %edx,0x1c(%r13)
 140:	8b 50 08             	mov    0x8(%rax),%edx
 143:	41 89 55 20          	mov    %edx,0x20(%r13)
 147:	48 8b 50 10          	mov    0x10(%rax),%rdx
 14b:	49 89 55 28          	mov    %rdx,0x28(%r13)
 14f:	48 8b 50 18          	mov    0x18(%rax),%rdx
 153:	48 8b 40 20          	mov    0x20(%rax),%rax
 157:	49 89 55 30          	mov    %rdx,0x30(%r13)
 15b:	49 89 45 38          	mov    %rax,0x38(%r13)
 15f:	4c 89 f7             	mov    %r14,%rdi
 162:	be 01 00 00 00       	mov    $0x1,%esi
 167:	e8 00 00 00 00       	callq  16c <__timer_create_new+0x16c>
 16c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 171:	31 c0                	xor    %eax,%eax
 173:	b9 10 00 00 00       	mov    $0x10,%ecx
 178:	49 8d 55 04          	lea    0x4(%r13),%rdx
 17c:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
 181:	f3 ab                	rep stos %eax,%es:(%rdi)
 183:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 189 <__timer_create_new+0x189>
 189:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
 18e:	48 63 fb             	movslq %ebx,%rdi
 191:	c7 44 24 18 20 00 00 	movl   $0x20,0x18(%rsp)
 198:	00 
 199:	c7 44 24 1c 04 00 00 	movl   $0x4,0x1c(%rsp)
 1a0:	00 
 1a1:	89 44 24 20          	mov    %eax,0x20(%rsp)
 1a5:	b1 de                	mov    $0xde,%cl
 1a7:	89 c8                	mov    %ecx,%eax
 1a9:	0f 05                	syscall 
 1ab:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
 1b0:	48 89 c3             	mov    %rax,%rbx
 1b3:	77 6a                	ja     21f <__timer_create_new+0x21f>
 1b5:	bf 00 00 00 00       	mov    $0x0,%edi
 1ba:	e8 00 00 00 00       	callq  1bf <__timer_create_new+0x1bf>
 1bf:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1c6 <__timer_create_new+0x1c6>
 1c6:	bf 00 00 00 00       	mov    $0x0,%edi
 1cb:	4c 89 2d 00 00 00 00 	mov    %r13,0x0(%rip)        # 1d2 <__timer_create_new+0x1d2>
 1d2:	49 89 45 50          	mov    %rax,0x50(%r13)
 1d6:	e8 00 00 00 00       	callq  1db <__timer_create_new+0x1db>
 1db:	4d 89 2c 24          	mov    %r13,(%r12)
 1df:	31 c0                	xor    %eax,%eax
 1e1:	e9 9b fe ff ff       	jmpq   81 <__timer_create_new+0x81>
 1e6:	83 c8 ff             	or     $0xffffffff,%eax
 1e9:	e9 93 fe ff ff       	jmpq   81 <__timer_create_new+0x81>
 1ee:	bf 08 00 00 00       	mov    $0x8,%edi
 1f3:	e8 00 00 00 00       	callq  1f8 <__timer_create_new+0x1f8>
 1f8:	48 85 c0             	test   %rax,%rax
 1fb:	49 89 c0             	mov    %rax,%r8
 1fe:	74 e6                	je     1e6 <__timer_create_new+0x1e6>
 200:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
 207:	00 
 208:	c7 44 24 18 0e 00 00 	movl   $0xe,0x18(%rsp)
 20f:	00 
 210:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
 215:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
 21a:	e9 31 fe ff ff       	jmpq   50 <__timer_create_new+0x50>
 21f:	4c 89 ef             	mov    %r13,%rdi
 222:	f7 db                	neg    %ebx
 224:	e8 00 00 00 00       	callq  229 <__timer_create_new+0x229>
 229:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 230 <__timer_create_new+0x230>
 230:	64 89 18             	mov    %ebx,%fs:(%rax)
 233:	83 c8 ff             	or     $0xffffffff,%eax
 236:	e9 46 fe ff ff       	jmpq   81 <__timer_create_new+0x81>

timer_delete.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__timer_delete_new>:
   0:	53                   	push   %rbx
   1:	b8 e2 00 00 00       	mov    $0xe2,%eax
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 63 7f 04          	movslq 0x4(%rdi),%rdi
   d:	0f 05                	syscall 
   f:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  15:	77 7d                	ja     94 <__timer_delete_new+0x94>
  17:	85 c0                	test   %eax,%eax
  19:	75 65                	jne    80 <__timer_delete_new+0x80>
  1b:	83 3b 02             	cmpl   $0x2,(%rbx)
  1e:	74 10                	je     30 <__timer_delete_new+0x30>
  20:	48 89 df             	mov    %rbx,%rdi
  23:	e8 00 00 00 00       	callq  28 <__timer_delete_new+0x28>
  28:	31 c0                	xor    %eax,%eax
  2a:	5b                   	pop    %rbx
  2b:	c3                   	retq   
  2c:	0f 1f 40 00          	nopl   0x0(%rax)
  30:	bf 00 00 00 00       	mov    $0x0,%edi
  35:	e8 00 00 00 00       	callq  3a <__timer_delete_new+0x3a>
  3a:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 41 <__timer_delete_new+0x41>
  41:	48 39 d3             	cmp    %rdx,%rbx
  44:	75 12                	jne    58 <__timer_delete_new+0x58>
  46:	eb 3f                	jmp    87 <__timer_delete_new+0x87>
  48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4f:	00 
  50:	48 39 c3             	cmp    %rax,%rbx
  53:	74 1b                	je     70 <__timer_delete_new+0x70>
  55:	48 89 c2             	mov    %rax,%rdx
  58:	48 8b 42 50          	mov    0x50(%rdx),%rax
  5c:	48 85 c0             	test   %rax,%rax
  5f:	75 ef                	jne    50 <__timer_delete_new+0x50>
  61:	bf 00 00 00 00       	mov    $0x0,%edi
  66:	e8 00 00 00 00       	callq  6b <__timer_delete_new+0x6b>
  6b:	eb b3                	jmp    20 <__timer_delete_new+0x20>
  6d:	0f 1f 00             	nopl   (%rax)
  70:	48 8b 43 50          	mov    0x50(%rbx),%rax
  74:	48 89 42 50          	mov    %rax,0x50(%rdx)
  78:	eb e7                	jmp    61 <__timer_delete_new+0x61>
  7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  85:	5b                   	pop    %rbx
  86:	c3                   	retq   
  87:	48 8b 43 50          	mov    0x50(%rbx),%rax
  8b:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 92 <__timer_delete_new+0x92>
  92:	eb cd                	jmp    61 <__timer_delete_new+0x61>
  94:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 9b <__timer_delete_new+0x9b>
  9b:	f7 d8                	neg    %eax
  9d:	64 89 02             	mov    %eax,%fs:(%rdx)
  a0:	83 c8 ff             	or     $0xffffffff,%eax
  a3:	5b                   	pop    %rbx
  a4:	c3                   	retq   

timer_getoverr.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__timer_getoverrun_new>:
   0:	48 63 7f 04          	movslq 0x4(%rdi),%rdi
   4:	b8 e1 00 00 00       	mov    $0xe1,%eax
   9:	0f 05                	syscall 
   b:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  11:	77 02                	ja     15 <__timer_getoverrun_new+0x15>
  13:	f3 c3                	repz retq 
  15:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1c <__timer_getoverrun_new+0x1c>
  1c:	f7 d8                	neg    %eax
  1e:	64 89 02             	mov    %eax,%fs:(%rdx)
  21:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  25:	c3                   	retq   

timer_gettime.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__timer_gettime_new>:
   0:	48 63 7f 04          	movslq 0x4(%rdi),%rdi
   4:	b8 e0 00 00 00       	mov    $0xe0,%eax
   9:	0f 05                	syscall 
   b:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  11:	77 02                	ja     15 <__timer_gettime_new+0x15>
  13:	f3 c3                	repz retq 
  15:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1c <__timer_gettime_new+0x1c>
  1c:	f7 d8                	neg    %eax
  1e:	64 89 02             	mov    %eax,%fs:(%rdx)
  21:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  25:	c3                   	retq   

timer_settime.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__timer_settime_new>:
   0:	49 89 ca             	mov    %rcx,%r10
   3:	48 63 7f 04          	movslq 0x4(%rdi),%rdi
   7:	48 63 f6             	movslq %esi,%rsi
   a:	b8 df 00 00 00       	mov    $0xdf,%eax
   f:	0f 05                	syscall 
  11:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  17:	77 02                	ja     1b <__timer_settime_new+0x1b>
  19:	f3 c3                	repz retq 
  1b:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 22 <__timer_settime_new+0x22>
  22:	f7 d8                	neg    %eax
  24:	64 89 02             	mov    %eax,%fs:(%rdx)
  27:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  2b:	c3                   	retq   

shm_open.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <where_is_shmfs>:
   0:	41 55                	push   %r13
   2:	bf 00 00 00 00       	mov    $0x0,%edi
   7:	41 54                	push   %r12
   9:	55                   	push   %rbp
   a:	53                   	push   %rbx
   b:	48 81 ec b8 02 00 00 	sub    $0x2b8,%rsp
  12:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  17:	e8 00 00 00 00       	callq  1c <where_is_shmfs+0x1c>
  1c:	85 c0                	test   %eax,%eax
  1e:	75 0f                	jne    2f <where_is_shmfs+0x2f>
  20:	48 81 7c 24 30 94 19 	cmpq   $0x1021994,0x30(%rsp)
  27:	02 01 
  29:	0f 84 f1 00 00 00    	je     120 <where_is_shmfs+0x120>
  2f:	be 00 00 00 00       	mov    $0x0,%esi
  34:	bf 00 00 00 00       	mov    $0x0,%edi
  39:	e8 00 00 00 00       	callq  3e <where_is_shmfs+0x3e>
  3e:	48 85 c0             	test   %rax,%rax
  41:	48 89 c5             	mov    %rax,%rbp
  44:	0f 84 fa 00 00 00    	je     144 <where_is_shmfs+0x144>
  4a:	41 bc 06 00 00 00    	mov    $0x6,%r12d
  50:	eb 16                	jmp    68 <where_is_shmfs+0x68>
  52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  58:	48 8b 73 10          	mov    0x10(%rbx),%rsi
  5c:	bf 00 00 00 00       	mov    $0x0,%edi
  61:	4c 89 e1             	mov    %r12,%rcx
  64:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  66:	74 38                	je     a0 <where_is_shmfs+0xa0>
  68:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
  6f:	00 
  70:	b9 00 02 00 00       	mov    $0x200,%ecx
  75:	48 89 e6             	mov    %rsp,%rsi
  78:	48 89 ef             	mov    %rbp,%rdi
  7b:	e8 00 00 00 00       	callq  80 <where_is_shmfs+0x80>
  80:	48 85 c0             	test   %rax,%rax
  83:	48 89 c3             	mov    %rax,%rbx
  86:	75 d0                	jne    58 <where_is_shmfs+0x58>
  88:	48 89 ef             	mov    %rbp,%rdi
  8b:	e8 00 00 00 00       	callq  90 <where_is_shmfs+0x90>
  90:	48 81 c4 b8 02 00 00 	add    $0x2b8,%rsp
  97:	5b                   	pop    %rbx
  98:	5d                   	pop    %rbp
  99:	41 5c                	pop    %r12
  9b:	41 5d                	pop    %r13
  9d:	c3                   	retq   
  9e:	66 90                	xchg   %ax,%ax
  a0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  a4:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  a9:	e8 00 00 00 00       	callq  ae <where_is_shmfs+0xae>
  ae:	85 c0                	test   %eax,%eax
  b0:	75 b6                	jne    68 <where_is_shmfs+0x68>
  b2:	48 81 7c 24 30 94 19 	cmpq   $0x1021994,0x30(%rsp)
  b9:	02 01 
  bb:	75 ab                	jne    68 <where_is_shmfs+0x68>
  bd:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
  c1:	4c 89 ef             	mov    %r13,%rdi
  c4:	e8 00 00 00 00       	callq  c9 <where_is_shmfs+0xc9>
  c9:	48 85 c0             	test   %rax,%rax
  cc:	48 89 c3             	mov    %rax,%rbx
  cf:	74 97                	je     68 <where_is_shmfs+0x68>
  d1:	48 8d 78 02          	lea    0x2(%rax),%rdi
  d5:	e8 00 00 00 00       	callq  da <where_is_shmfs+0xda>
  da:	48 85 c0             	test   %rax,%rax
  dd:	49 89 c4             	mov    %rax,%r12
  e0:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # e7 <where_is_shmfs+0xe7>
  e7:	74 9f                	je     88 <where_is_shmfs+0x88>
  e9:	48 89 da             	mov    %rbx,%rdx
  ec:	4c 89 ee             	mov    %r13,%rsi
  ef:	48 89 c7             	mov    %rax,%rdi
  f2:	e8 00 00 00 00       	callq  f7 <where_is_shmfs+0xf7>
  f7:	48 89 c2             	mov    %rax,%rdx
  fa:	80 7a ff 2f          	cmpb   $0x2f,-0x1(%rdx)
  fe:	74 07                	je     107 <where_is_shmfs+0x107>
 100:	48 83 c2 01          	add    $0x1,%rdx
 104:	c6 00 2f             	movb   $0x2f,(%rax)
 107:	c6 02 00             	movb   $0x0,(%rdx)
 10a:	4c 29 e2             	sub    %r12,%rdx
 10d:	48 89 15 00 00 00 00 	mov    %rdx,0x0(%rip)        # 114 <where_is_shmfs+0x114>
 114:	e9 6f ff ff ff       	jmpq   88 <where_is_shmfs+0x88>
 119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 120:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 12b <where_is_shmfs+0x12b>
 127:	00 00 00 00 
 12b:	48 c7 05 00 00 00 00 	movq   $0x9,0x0(%rip)        # 136 <where_is_shmfs+0x136>
 132:	09 00 00 00 
 136:	48 81 c4 b8 02 00 00 	add    $0x2b8,%rsp
 13d:	5b                   	pop    %rbx
 13e:	5d                   	pop    %rbp
 13f:	41 5c                	pop    %r12
 141:	41 5d                	pop    %r13
 143:	c3                   	retq   
 144:	be 00 00 00 00       	mov    $0x0,%esi
 149:	bf 00 00 00 00       	mov    $0x0,%edi
 14e:	e8 00 00 00 00       	callq  153 <where_is_shmfs+0x153>
 153:	48 85 c0             	test   %rax,%rax
 156:	48 89 c5             	mov    %rax,%rbp
 159:	0f 85 eb fe ff ff    	jne    4a <where_is_shmfs+0x4a>
 15f:	e9 2c ff ff ff       	jmpq   90 <where_is_shmfs+0x90>
 164:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
 16b:	00 00 00 00 00 

0000000000000170 <shm_open>:
 170:	55                   	push   %rbp
 171:	b8 00 00 00 00       	mov    $0x0,%eax
 176:	48 89 e5             	mov    %rsp,%rbp
 179:	41 57                	push   %r15
 17b:	41 89 f7             	mov    %esi,%r15d
 17e:	41 56                	push   %r14
 180:	41 55                	push   %r13
 182:	41 54                	push   %r12
 184:	53                   	push   %rbx
 185:	48 89 fb             	mov    %rdi,%rbx
 188:	48 83 ec 18          	sub    $0x18,%rsp
 18c:	48 85 c0             	test   %rax,%rax
 18f:	89 55 cc             	mov    %edx,-0x34(%rbp)
 192:	0f 84 1b 01 00 00    	je     2b3 <shm_open+0x143>
 198:	be 00 00 00 00       	mov    $0x0,%esi
 19d:	bf 00 00 00 00       	mov    $0x0,%edi
 1a2:	ff d0                	callq  *%rax
 1a4:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 1ab <shm_open+0x3b>
 1ab:	4d 85 ed             	test   %r13,%r13
 1ae:	75 0c                	jne    1bc <shm_open+0x4c>
 1b0:	e9 e9 00 00 00       	jmpq   29e <shm_open+0x12e>
 1b5:	0f 1f 00             	nopl   (%rax)
 1b8:	48 83 c3 01          	add    $0x1,%rbx
 1bc:	44 0f b6 33          	movzbl (%rbx),%r14d
 1c0:	41 80 fe 2f          	cmp    $0x2f,%r14b
 1c4:	74 f2                	je     1b8 <shm_open+0x48>
 1c6:	48 89 df             	mov    %rbx,%rdi
 1c9:	e8 00 00 00 00       	callq  1ce <shm_open+0x5e>
 1ce:	45 84 f6             	test   %r14b,%r14b
 1d1:	49 89 c4             	mov    %rax,%r12
 1d4:	0f 84 86 00 00 00    	je     260 <shm_open+0xf0>
 1da:	48 3d ff 00 00 00    	cmp    $0xff,%rax
 1e0:	77 7e                	ja     260 <shm_open+0xf0>
 1e2:	be 2f 00 00 00       	mov    $0x2f,%esi
 1e7:	48 89 df             	mov    %rbx,%rdi
 1ea:	e8 00 00 00 00       	callq  1ef <shm_open+0x7f>
 1ef:	48 85 c0             	test   %rax,%rax
 1f2:	75 6c                	jne    260 <shm_open+0xf0>
 1f4:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1fb <shm_open+0x8b>
 1fb:	4c 89 ee             	mov    %r13,%rsi
 1fe:	4a 8d 44 22 1f       	lea    0x1f(%rdx,%r12,1),%rax
 203:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
 207:	48 29 c4             	sub    %rax,%rsp
 20a:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
 20f:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
 213:	48 89 cf             	mov    %rcx,%rdi
 216:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 21a:	e8 00 00 00 00       	callq  21f <shm_open+0xaf>
 21f:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
 224:	48 89 de             	mov    %rbx,%rsi
 227:	48 89 c7             	mov    %rax,%rdi
 22a:	e8 00 00 00 00       	callq  22f <shm_open+0xbf>
 22f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
 233:	8b 55 cc             	mov    -0x34(%rbp),%edx
 236:	44 89 fe             	mov    %r15d,%esi
 239:	81 ce 00 00 0a 00    	or     $0xa0000,%esi
 23f:	31 c0                	xor    %eax,%eax
 241:	48 89 cf             	mov    %rcx,%rdi
 244:	e8 00 00 00 00       	callq  249 <shm_open+0xd9>
 249:	83 f8 ff             	cmp    $0xffffffff,%eax
 24c:	74 3a                	je     288 <shm_open+0x118>
 24e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
 252:	5b                   	pop    %rbx
 253:	41 5c                	pop    %r12
 255:	41 5d                	pop    %r13
 257:	41 5e                	pop    %r14
 259:	41 5f                	pop    %r15
 25b:	5d                   	pop    %rbp
 25c:	c3                   	retq   
 25d:	0f 1f 00             	nopl   (%rax)
 260:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 267 <shm_open+0xf7>
 267:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
 26e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
 272:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 277:	5b                   	pop    %rbx
 278:	41 5c                	pop    %r12
 27a:	41 5d                	pop    %r13
 27c:	41 5e                	pop    %r14
 27e:	41 5f                	pop    %r15
 280:	5d                   	pop    %rbp
 281:	c3                   	retq   
 282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 288:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 28f <shm_open+0x11f>
 28f:	64 83 3a 15          	cmpl   $0x15,%fs:(%rdx)
 293:	75 b9                	jne    24e <shm_open+0xde>
 295:	64 c7 02 16 00 00 00 	movl   $0x16,%fs:(%rdx)
 29c:	eb b0                	jmp    24e <shm_open+0xde>
 29e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2a5 <shm_open+0x135>
 2a5:	64 c7 00 26 00 00 00 	movl   $0x26,%fs:(%rax)
 2ac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 2b1:	eb 9b                	jmp    24e <shm_open+0xde>
 2b3:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2b9 <shm_open+0x149>
 2b9:	85 c0                	test   %eax,%eax
 2bb:	0f 85 e3 fe ff ff    	jne    1a4 <shm_open+0x34>
 2c1:	e8 3a fd ff ff       	callq  0 <where_is_shmfs>
 2c6:	83 0d 00 00 00 00 02 	orl    $0x2,0x0(%rip)        # 2cd <shm_open+0x15d>
 2cd:	e9 d2 fe ff ff       	jmpq   1a4 <shm_open+0x34>
 2d2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
 2d9:	1f 84 00 00 00 00 00 

00000000000002e0 <shm_unlink>:
 2e0:	55                   	push   %rbp
 2e1:	b8 00 00 00 00       	mov    $0x0,%eax
 2e6:	48 85 c0             	test   %rax,%rax
 2e9:	48 89 e5             	mov    %rsp,%rbp
 2ec:	41 56                	push   %r14
 2ee:	41 55                	push   %r13
 2f0:	41 54                	push   %r12
 2f2:	53                   	push   %rbx
 2f3:	48 89 fb             	mov    %rdi,%rbx
 2f6:	0f 84 ea 00 00 00    	je     3e6 <shm_unlink+0x106>
 2fc:	be 00 00 00 00       	mov    $0x0,%esi
 301:	bf 00 00 00 00       	mov    $0x0,%edi
 306:	ff d0                	callq  *%rax
 308:	4c 8b 35 00 00 00 00 	mov    0x0(%rip),%r14        # 30f <shm_unlink+0x2f>
 30f:	4d 85 f6             	test   %r14,%r14
 312:	75 10                	jne    324 <shm_unlink+0x44>
 314:	e9 97 00 00 00       	jmpq   3b0 <shm_unlink+0xd0>
 319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 320:	48 83 c3 01          	add    $0x1,%rbx
 324:	44 0f b6 23          	movzbl (%rbx),%r12d
 328:	41 80 fc 2f          	cmp    $0x2f,%r12b
 32c:	74 f2                	je     320 <shm_unlink+0x40>
 32e:	48 89 df             	mov    %rbx,%rdi
 331:	e8 00 00 00 00       	callq  336 <shm_unlink+0x56>
 336:	45 84 e4             	test   %r12b,%r12b
 339:	49 89 c5             	mov    %rax,%r13
 33c:	74 72                	je     3b0 <shm_unlink+0xd0>
 33e:	48 3d ff 00 00 00    	cmp    $0xff,%rax
 344:	77 6a                	ja     3b0 <shm_unlink+0xd0>
 346:	be 2f 00 00 00       	mov    $0x2f,%esi
 34b:	48 89 df             	mov    %rbx,%rdi
 34e:	e8 00 00 00 00       	callq  353 <shm_unlink+0x73>
 353:	48 85 c0             	test   %rax,%rax
 356:	75 58                	jne    3b0 <shm_unlink+0xd0>
 358:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 35f <shm_unlink+0x7f>
 35f:	4c 89 f6             	mov    %r14,%rsi
 362:	4a 8d 44 2a 1f       	lea    0x1f(%rdx,%r13,1),%rax
 367:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
 36b:	48 29 c4             	sub    %rax,%rsp
 36e:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
 373:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
 377:	4c 89 e7             	mov    %r12,%rdi
 37a:	e8 00 00 00 00       	callq  37f <shm_unlink+0x9f>
 37f:	49 8d 55 01          	lea    0x1(%r13),%rdx
 383:	48 89 de             	mov    %rbx,%rsi
 386:	48 89 c7             	mov    %rax,%rdi
 389:	e8 00 00 00 00       	callq  38e <shm_unlink+0xae>
 38e:	4c 89 e7             	mov    %r12,%rdi
 391:	e8 00 00 00 00       	callq  396 <shm_unlink+0xb6>
 396:	85 c0                	test   %eax,%eax
 398:	78 36                	js     3d0 <shm_unlink+0xf0>
 39a:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
 39e:	5b                   	pop    %rbx
 39f:	41 5c                	pop    %r12
 3a1:	41 5d                	pop    %r13
 3a3:	41 5e                	pop    %r14
 3a5:	5d                   	pop    %rbp
 3a6:	c3                   	retq   
 3a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 3ae:	00 00 
 3b0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3b7 <shm_unlink+0xd7>
 3b7:	64 c7 00 02 00 00 00 	movl   $0x2,%fs:(%rax)
 3be:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
 3c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 3c7:	5b                   	pop    %rbx
 3c8:	41 5c                	pop    %r12
 3ca:	41 5d                	pop    %r13
 3cc:	41 5e                	pop    %r14
 3ce:	5d                   	pop    %rbp
 3cf:	c3                   	retq   
 3d0:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 3d7 <shm_unlink+0xf7>
 3d7:	64 83 3a 01          	cmpl   $0x1,%fs:(%rdx)
 3db:	75 bd                	jne    39a <shm_unlink+0xba>
 3dd:	64 c7 02 0d 00 00 00 	movl   $0xd,%fs:(%rdx)
 3e4:	eb b4                	jmp    39a <shm_unlink+0xba>
 3e6:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3ec <shm_unlink+0x10c>
 3ec:	85 c0                	test   %eax,%eax
 3ee:	0f 85 14 ff ff ff    	jne    308 <shm_unlink+0x28>
 3f4:	e8 07 fc ff ff       	callq  0 <where_is_shmfs>
 3f9:	83 0d 00 00 00 00 02 	orl    $0x2,0x0(%rip)        # 400 <shm_unlink+0x120>
 400:	e9 03 ff ff ff       	jmpq   308 <shm_unlink+0x28>

Disassembly of section __libc_freeres_fn:

0000000000000000 <freeit>:
   0:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 7 <freeit+0x7>
   7:	48 81 ff 00 00 00 00 	cmp    $0x0,%rdi
   e:	74 08                	je     18 <freeit+0x18>
  10:	e9 00 00 00 00       	jmpq   15 <freeit+0x15>
  15:	0f 1f 00             	nopl   (%rax)
  18:	f3 c3                	repz retq 

shm_unlink.o:     file format elf64-x86-64


mq_open.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__mq_open>:
   0:	48 89 54 24 d8       	mov    %rdx,-0x28(%rsp)
   5:	48 89 4c 24 e0       	mov    %rcx,-0x20(%rsp)
   a:	80 3f 2f             	cmpb   $0x2f,(%rdi)
   d:	75 51                	jne    60 <__mq_open+0x60>
   f:	31 d2                	xor    %edx,%edx
  11:	45 31 d2             	xor    %r10d,%r10d
  14:	40 f6 c6 40          	test   $0x40,%sil
  18:	75 1e                	jne    38 <__mq_open+0x38>
  1a:	48 63 f6             	movslq %esi,%rsi
  1d:	48 83 c7 01          	add    $0x1,%rdi
  21:	b8 f0 00 00 00       	mov    $0xf0,%eax
  26:	0f 05                	syscall 
  28:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  2e:	77 44                	ja     74 <__mq_open+0x74>
  30:	f3 c3                	repz retq 
  32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  38:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
  3d:	c7 44 24 a8 18 00 00 	movl   $0x18,-0x58(%rsp)
  44:	00 
  45:	4c 8b 54 24 e0       	mov    -0x20(%rsp),%r10
  4a:	8b 54 24 d8          	mov    -0x28(%rsp),%edx
  4e:	48 89 44 24 b0       	mov    %rax,-0x50(%rsp)
  53:	48 8d 44 24 c8       	lea    -0x38(%rsp),%rax
  58:	48 89 44 24 b8       	mov    %rax,-0x48(%rsp)
  5d:	eb bb                	jmp    1a <__mq_open+0x1a>
  5f:	90                   	nop
  60:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 67 <__mq_open+0x67>
  67:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
  6e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  73:	c3                   	retq   
  74:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 7b <__mq_open+0x7b>
  7b:	f7 d8                	neg    %eax
  7d:	64 89 02             	mov    %eax,%fs:(%rdx)
  80:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  84:	c3                   	retq   
  85:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  8c:	00 00 00 00 

0000000000000090 <__mq_open_2>:
  90:	40 f6 c6 40          	test   $0x40,%sil
  94:	75 07                	jne    9d <__mq_open_2+0xd>
  96:	31 c0                	xor    %eax,%eax
  98:	e9 00 00 00 00       	jmpq   9d <__mq_open_2+0xd>
  9d:	50                   	push   %rax
  9e:	bf 00 00 00 00       	mov    $0x0,%edi
  a3:	e8 00 00 00 00       	callq  a8 <__mq_open_2+0x18>

mq_close.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <mq_close>:
   0:	48 63 ff             	movslq %edi,%rdi
   3:	b8 03 00 00 00       	mov    $0x3,%eax
   8:	0f 05                	syscall 
   a:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  10:	77 02                	ja     14 <mq_close+0x14>
  12:	f3 c3                	repz retq 
  14:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1b <mq_close+0x1b>
  1b:	f7 d8                	neg    %eax
  1d:	64 89 02             	mov    %eax,%fs:(%rdx)
  20:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  24:	c3                   	retq   

mq_unlink.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <mq_unlink>:
   0:	80 3f 2f             	cmpb   $0x2f,(%rdi)
   3:	75 1b                	jne    20 <mq_unlink+0x20>
   5:	48 83 c7 01          	add    $0x1,%rdi
   9:	b8 f1 00 00 00       	mov    $0xf1,%eax
   e:	0f 05                	syscall 
  10:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
  15:	77 1d                	ja     34 <mq_unlink+0x34>
  17:	f3 c3                	repz retq 
  19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  20:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 27 <mq_unlink+0x27>
  27:	64 c7 00 16 00 00 00 	movl   $0x16,%fs:(%rax)
  2e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  33:	c3                   	retq   
  34:	f7 d8                	neg    %eax
  36:	ba 0d 00 00 00       	mov    $0xd,%edx
  3b:	83 f8 01             	cmp    $0x1,%eax
  3e:	0f 44 c2             	cmove  %edx,%eax
  41:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 48 <mq_unlink+0x48>
  48:	64 89 02             	mov    %eax,%fs:(%rdx)
  4b:	83 c8 ff             	or     $0xffffffff,%eax
  4e:	c3                   	retq   

mq_getattr.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <mq_getattr>:
   0:	48 89 f2             	mov    %rsi,%rdx
   3:	31 f6                	xor    %esi,%esi
   5:	e9 00 00 00 00       	jmpq   a <mq_getattr+0xa>

mq_setattr.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__GI_mq_setattr>:
   0:	b8 f5 00 00 00       	mov    $0xf5,%eax
   5:	0f 05                	syscall 
   7:	48 3d 01 f0 ff ff    	cmp    $0xfffffffffffff001,%rax
   d:	0f 83 00 00 00 00    	jae    13 <__GI_mq_setattr+0x13>
  13:	c3                   	retq   

mq_notify.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <reset_once>:
   0:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # a <reset_once+0xa>
   7:	00 00 00 
   a:	c3                   	retq   
   b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000010 <helper_thread>:
  10:	48 83 ec 38          	sub    $0x38,%rsp
  14:	0f 1f 40 00          	nopl   0x0(%rax)
  18:	8b 3d 00 00 00 00    	mov    0x0(%rip),%edi        # 1e <helper_thread+0xe>
  1e:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
  23:	b9 00 41 00 00       	mov    $0x4100,%ecx
  28:	ba 20 00 00 00       	mov    $0x20,%edx
  2d:	e8 00 00 00 00       	callq  32 <helper_thread+0x22>
  32:	48 83 f8 1f          	cmp    $0x1f,%rax
  36:	7e e0                	jle    18 <helper_thread+0x8>
  38:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
  3d:	3c 01                	cmp    $0x1,%al
  3f:	74 17                	je     58 <helper_thread+0x48>
  41:	3c 02                	cmp    $0x2,%al
  43:	75 d3                	jne    18 <helper_thread+0x8>
  45:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  4a:	e8 00 00 00 00       	callq  4f <helper_thread+0x3f>
  4f:	eb c7                	jmp    18 <helper_thread+0x8>
  51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  58:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  5d:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
  62:	ba 00 00 00 00       	mov    $0x0,%edx
  67:	48 89 e7             	mov    %rsp,%rdi
  6a:	e8 00 00 00 00       	callq  6f <helper_thread+0x5f>
  6f:	85 c0                	test   %eax,%eax
  71:	75 a5                	jne    18 <helper_thread+0x8>
  73:	bf 00 00 00 00       	mov    $0x0,%edi
  78:	e8 00 00 00 00       	callq  7d <helper_thread+0x6d>
  7d:	eb 99                	jmp    18 <helper_thread+0x8>
  7f:	90                   	nop

0000000000000080 <change_sigmask>:
  80:	55                   	push   %rbp
  81:	48 89 f5             	mov    %rsi,%rbp
  84:	53                   	push   %rbx
  85:	89 fb                	mov    %edi,%ebx
  87:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  8e:	48 89 e7             	mov    %rsp,%rdi
  91:	e8 00 00 00 00       	callq  96 <change_sigmask+0x16>
  96:	48 89 ea             	mov    %rbp,%rdx
  99:	48 89 e6             	mov    %rsp,%rsi
  9c:	89 df                	mov    %ebx,%edi
  9e:	e8 00 00 00 00       	callq  a3 <change_sigmask+0x23>
  a3:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  aa:	5b                   	pop    %rbx
  ab:	5d                   	pop    %rbp
  ac:	c3                   	retq   
  ad:	0f 1f 00             	nopl   (%rax)

00000000000000b0 <init_mq_netlink>:
  b0:	55                   	push   %rbp
  b1:	53                   	push   %rbx
  b2:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  b9:	83 3d 00 00 00 00 ff 	cmpl   $0xffffffff,0x0(%rip)        # c0 <init_mq_netlink+0x10>
  c0:	74 3e                	je     100 <init_mq_netlink+0x50>
  c2:	31 f6                	xor    %esi,%esi
  c4:	ba 02 00 00 00       	mov    $0x2,%edx
  c9:	bf 00 00 00 00       	mov    $0x0,%edi
  ce:	e8 00 00 00 00       	callq  d3 <init_mq_netlink+0x23>
  d3:	85 c0                	test   %eax,%eax
  d5:	0f 84 cc 00 00 00    	je     1a7 <init_mq_netlink+0xf7>
  db:	48 63 3d 00 00 00 00 	movslq 0x0(%rip),%rdi        # e2 <init_mq_netlink+0x32>
  e2:	b8 03 00 00 00       	mov    $0x3,%eax
  e7:	0f 05                	syscall 
  e9:	c7 05 00 00 00 00 ff 	movl   $0xffffffff,0x0(%rip)        # f3 <init_mq_netlink+0x43>
  f0:	ff ff ff 
  f3:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
  fa:	5b                   	pop    %rbx
  fb:	5d                   	pop    %rbp
  fc:	c3                   	retq   
  fd:	0f 1f 00             	nopl   (%rax)
 100:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 106 <init_mq_netlink+0x56>
 106:	85 d2                	test   %edx,%edx
 108:	79 46                	jns    150 <init_mq_netlink+0xa0>
 10a:	bf 10 00 00 00       	mov    $0x10,%edi
 10f:	31 d2                	xor    %edx,%edx
 111:	be 03 00 00 00       	mov    $0x3,%esi
 116:	e8 00 00 00 00       	callq  11b <init_mq_netlink+0x6b>
 11b:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 121 <init_mq_netlink+0x71>
 121:	89 c7                	mov    %eax,%edi
 123:	83 ff ff             	cmp    $0xffffffff,%edi
 126:	74 cb                	je     f3 <init_mq_netlink+0x43>
 128:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 12e <init_mq_netlink+0x7e>
 12e:	85 c0                	test   %eax,%eax
 130:	79 90                	jns    c2 <init_mq_netlink+0x12>
 132:	31 c0                	xor    %eax,%eax
 134:	ba 01 00 00 00       	mov    $0x1,%edx
 139:	be 02 00 00 00       	mov    $0x2,%esi
 13e:	e8 00 00 00 00       	callq  143 <init_mq_netlink+0x93>
 143:	85 c0                	test   %eax,%eax
 145:	75 94                	jne    db <init_mq_netlink+0x2b>
 147:	e9 76 ff ff ff       	jmpq   c2 <init_mq_netlink+0x12>
 14c:	0f 1f 40 00          	nopl   0x0(%rax)
 150:	31 d2                	xor    %edx,%edx
 152:	be 03 00 08 00       	mov    $0x80003,%esi
 157:	bf 10 00 00 00       	mov    $0x10,%edi
 15c:	e8 00 00 00 00       	callq  161 <init_mq_netlink+0xb1>
 161:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 167 <init_mq_netlink+0xb7>
 167:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 16d <init_mq_netlink+0xbd>
 16d:	85 d2                	test   %edx,%edx
 16f:	75 0d                	jne    17e <init_mq_netlink+0xce>
 171:	83 f8 ff             	cmp    $0xffffffff,%eax
 174:	b2 01                	mov    $0x1,%dl
 176:	74 18                	je     190 <init_mq_netlink+0xe0>
 178:	89 15 00 00 00 00    	mov    %edx,0x0(%rip)        # 17e <init_mq_netlink+0xce>
 17e:	85 d2                	test   %edx,%edx
 180:	78 88                	js     10a <init_mq_netlink+0x5a>
 182:	89 c7                	mov    %eax,%edi
 184:	eb 9d                	jmp    123 <init_mq_netlink+0x73>
 186:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 18d:	00 00 00 
 190:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 197 <init_mq_netlink+0xe7>
 197:	64 83 3a 16          	cmpl   $0x16,%fs:(%rdx)
 19b:	0f 95 c2             	setne  %dl
 19e:	0f b6 d2             	movzbl %dl,%edx
 1a1:	8d 54 12 ff          	lea    -0x1(%rdx,%rdx,1),%edx
 1a5:	eb d1                	jmp    178 <init_mq_netlink+0xc8>
 1a7:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 1ac:	e8 00 00 00 00       	callq  1b1 <init_mq_netlink+0x101>
 1b1:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 1b6:	be 01 00 00 00       	mov    $0x1,%esi
 1bb:	e8 00 00 00 00       	callq  1c0 <init_mq_netlink+0x110>
 1c0:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 1c5:	e8 00 00 00 00       	callq  1ca <init_mq_netlink+0x11a>
 1ca:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 1cf:	48 89 c6             	mov    %rax,%rsi
 1d2:	e8 00 00 00 00       	callq  1d7 <init_mq_netlink+0x127>
 1d7:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
 1dc:	31 ff                	xor    %edi,%edi
 1de:	e8 9d fe ff ff       	callq  80 <change_sigmask>
 1e3:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
 1e8:	89 c5                	mov    %eax,%ebp
 1ea:	31 c9                	xor    %ecx,%ecx
 1ec:	ba 00 00 00 00       	mov    $0x0,%edx
 1f1:	48 89 e7             	mov    %rsp,%rdi
 1f4:	e8 00 00 00 00       	callq  1f9 <init_mq_netlink+0x149>
 1f9:	85 ed                	test   %ebp,%ebp
 1fb:	89 c3                	mov    %eax,%ebx
 1fd:	74 2a                	je     229 <init_mq_netlink+0x179>
 1ff:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 204:	e8 00 00 00 00       	callq  209 <init_mq_netlink+0x159>
 209:	85 db                	test   %ebx,%ebx
 20b:	0f 85 ca fe ff ff    	jne    db <init_mq_netlink+0x2b>
 211:	83 3d 00 00 00 00 00 	cmpl   $0x0,0x0(%rip)        # 218 <init_mq_netlink+0x168>
 218:	74 22                	je     23c <init_mq_netlink+0x18c>
 21a:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # 224 <init_mq_netlink+0x174>
 221:	00 00 00 
 224:	e9 ca fe ff ff       	jmpq   f3 <init_mq_netlink+0x43>
 229:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
 22e:	31 d2                	xor    %edx,%edx
 230:	bf 02 00 00 00       	mov    $0x2,%edi
 235:	e8 00 00 00 00       	callq  23a <init_mq_netlink+0x18a>
 23a:	eb c3                	jmp    1ff <init_mq_netlink+0x14f>
 23c:	31 f6                	xor    %esi,%esi
 23e:	31 ff                	xor    %edi,%edi
 240:	ba 00 00 00 00       	mov    $0x0,%edx
 245:	e8 00 00 00 00       	callq  24a <init_mq_netlink+0x19a>
 24a:	85 c0                	test   %eax,%eax
 24c:	74 cc                	je     21a <init_mq_netlink+0x16a>
 24e:	48 8b 3c 24          	mov    (%rsp),%rdi
 252:	e8 00 00 00 00       	callq  257 <init_mq_netlink+0x1a7>
 257:	e9 7f fe ff ff       	jmpq   db <init_mq_netlink+0x2b>
 25c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000260 <notification_function>:
 260:	55                   	push   %rbp
 261:	53                   	push   %rbx
 262:	48 83 ec 08          	sub    $0x8,%rsp
 266:	48 8b 2f             	mov    (%rdi),%rbp
 269:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
 26d:	bf 00 00 00 00       	mov    $0x0,%edi
 272:	e8 00 00 00 00       	callq  277 <notification_function+0x17>
 277:	e8 00 00 00 00       	callq  27c <notification_function+0x1c>
 27c:	48 89 c7             	mov    %rax,%rdi
 27f:	e8 00 00 00 00       	callq  284 <notification_function+0x24>
 284:	31 f6                	xor    %esi,%esi
 286:	bf 01 00 00 00       	mov    $0x1,%edi
 28b:	e8 f0 fd ff ff       	callq  80 <change_sigmask>
 290:	48 89 df             	mov    %rbx,%rdi
 293:	ff d5                	callq  *%rbp
 295:	48 83 c4 08          	add    $0x8,%rsp
 299:	31 c0                	xor    %eax,%eax
 29b:	5b                   	pop    %rbx
 29c:	5d                   	pop    %rbp
 29d:	c3                   	retq   
 29e:	66 90                	xchg   %ax,%ax

00000000000002a0 <mq_notify>:
 2a0:	41 54                	push   %r12
 2a2:	55                   	push   %rbp
 2a3:	89 fd                	mov    %edi,%ebp
 2a5:	53                   	push   %rbx
 2a6:	48 89 f3             	mov    %rsi,%rbx
 2a9:	48 83 ec 60          	sub    $0x60,%rsp
 2ad:	48 85 f6             	test   %rsi,%rsi
 2b0:	74 06                	je     2b8 <mq_notify+0x18>
 2b2:	83 7e 0c 02          	cmpl   $0x2,0xc(%rsi)
 2b6:	74 28                	je     2e0 <mq_notify+0x40>
 2b8:	48 89 de             	mov    %rbx,%rsi
 2bb:	48 63 fd             	movslq %ebp,%rdi
 2be:	b8 f4 00 00 00       	mov    $0xf4,%eax
 2c3:	0f 05                	syscall 
 2c5:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
 2cb:	0f 87 e8 00 00 00    	ja     3b9 <mq_notify+0x119>
 2d1:	48 83 c4 60          	add    $0x60,%rsp
 2d5:	5b                   	pop    %rbx
 2d6:	5d                   	pop    %rbp
 2d7:	41 5c                	pop    %r12
 2d9:	c3                   	retq   
 2da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 2e0:	be 00 00 00 00       	mov    $0x0,%esi
 2e5:	bf 00 00 00 00       	mov    $0x0,%edi
 2ea:	e8 00 00 00 00       	callq  2ef <mq_notify+0x4f>
 2ef:	44 8b 25 00 00 00 00 	mov    0x0(%rip),%r12d        # 2f6 <mq_notify+0x56>
 2f6:	41 83 fc ff          	cmp    $0xffffffff,%r12d
 2fa:	0f 84 ce 00 00 00    	je     3ce <mq_notify+0x12e>
 300:	48 8b 43 10          	mov    0x10(%rbx),%rax
 304:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
 30b:	00 00 
 30d:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
 314:	00 00 
 316:	48 89 04 24          	mov    %rax,(%rsp)
 31a:	48 8b 03             	mov    (%rbx),%rax
 31d:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
 321:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
 326:	48 85 db             	test   %rbx,%rbx
 329:	74 4a                	je     375 <mq_notify+0xd5>
 32b:	bf 38 00 00 00       	mov    $0x38,%edi
 330:	e8 00 00 00 00       	callq  335 <mq_notify+0x95>
 335:	48 85 c0             	test   %rax,%rax
 338:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
 33d:	74 70                	je     3af <mq_notify+0x10f>
 33f:	48 8b 13             	mov    (%rbx),%rdx
 342:	48 89 10             	mov    %rdx,(%rax)
 345:	48 8b 53 08          	mov    0x8(%rbx),%rdx
 349:	48 89 50 08          	mov    %rdx,0x8(%rax)
 34d:	48 8b 53 10          	mov    0x10(%rbx),%rdx
 351:	48 89 50 10          	mov    %rdx,0x10(%rax)
 355:	48 8b 53 18          	mov    0x18(%rbx),%rdx
 359:	48 89 50 18          	mov    %rdx,0x18(%rax)
 35d:	48 8b 53 20          	mov    0x20(%rbx),%rdx
 361:	48 89 50 20          	mov    %rdx,0x20(%rax)
 365:	48 8b 53 28          	mov    0x28(%rbx),%rdx
 369:	48 89 50 28          	mov    %rdx,0x28(%rax)
 36d:	48 8b 53 30          	mov    0x30(%rbx),%rdx
 371:	48 89 50 30          	mov    %rdx,0x30(%rax)
 375:	c7 44 24 2c 02 00 00 	movl   $0x2,0x2c(%rsp)
 37c:	00 
 37d:	44 89 64 24 28       	mov    %r12d,0x28(%rsp)
 382:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
 387:	48 89 64 24 20       	mov    %rsp,0x20(%rsp)
 38c:	48 63 fd             	movslq %ebp,%rdi
 38f:	b8 f4 00 00 00       	mov    $0xf4,%eax
 394:	0f 05                	syscall 
 396:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
 39c:	77 46                	ja     3e4 <mq_notify+0x144>
 39e:	85 c0                	test   %eax,%eax
 3a0:	89 c3                	mov    %eax,%ebx
 3a2:	75 4f                	jne    3f3 <mq_notify+0x153>
 3a4:	48 83 c4 60          	add    $0x60,%rsp
 3a8:	31 c0                	xor    %eax,%eax
 3aa:	5b                   	pop    %rbx
 3ab:	5d                   	pop    %rbp
 3ac:	41 5c                	pop    %r12
 3ae:	c3                   	retq   
 3af:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 3b4:	e9 18 ff ff ff       	jmpq   2d1 <mq_notify+0x31>
 3b9:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 3c0 <mq_notify+0x120>
 3c0:	f7 d8                	neg    %eax
 3c2:	64 89 02             	mov    %eax,%fs:(%rdx)
 3c5:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
 3c9:	e9 03 ff ff ff       	jmpq   2d1 <mq_notify+0x31>
 3ce:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d5 <mq_notify+0x135>
 3d5:	64 c7 00 26 00 00 00 	movl   $0x26,%fs:(%rax)
 3dc:	44 89 e0             	mov    %r12d,%eax
 3df:	e9 ed fe ff ff       	jmpq   2d1 <mq_notify+0x31>
 3e4:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 3eb <mq_notify+0x14b>
 3eb:	f7 d8                	neg    %eax
 3ed:	83 cb ff             	or     $0xffffffff,%ebx
 3f0:	64 89 02             	mov    %eax,%fs:(%rdx)
 3f3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
 3f8:	e8 00 00 00 00       	callq  3fd <mq_notify+0x15d>
 3fd:	89 d8                	mov    %ebx,%eax
 3ff:	e9 cd fe ff ff       	jmpq   2d1 <mq_notify+0x31>

mq_send.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <mq_send>:
   0:	45 31 c0             	xor    %r8d,%r8d
   3:	e9 00 00 00 00       	jmpq   8 <mq_send+0x8>

mq_receive.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <mq_receive>:
   0:	45 31 c0             	xor    %r8d,%r8d
   3:	e9 00 00 00 00       	jmpq   8 <mq_receive+0x8>

mq_timedsend.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__GI_mq_timedsend>:
   0:	64 83 3c 25 18 00 00 	cmpl   $0x0,%fs:0x18
   7:	00 00 
   9:	75 17                	jne    22 <__mq_timedsend_nocancel+0x17>

000000000000000b <__mq_timedsend_nocancel>:
   b:	49 89 ca             	mov    %rcx,%r10
   e:	b8 f2 00 00 00       	mov    $0xf2,%eax
  13:	0f 05                	syscall 
  15:	48 3d 01 f0 ff ff    	cmp    $0xfffffffffffff001,%rax
  1b:	0f 83 00 00 00 00    	jae    21 <__mq_timedsend_nocancel+0x16>
  21:	c3                   	retq   
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	e8 00 00 00 00       	callq  2b <__mq_timedsend_nocancel+0x20>
  2b:	48 89 04 24          	mov    %rax,(%rsp)
  2f:	49 89 ca             	mov    %rcx,%r10
  32:	b8 f2 00 00 00       	mov    $0xf2,%eax
  37:	0f 05                	syscall 
  39:	48 8b 3c 24          	mov    (%rsp),%rdi
  3d:	48 89 c2             	mov    %rax,%rdx
  40:	e8 00 00 00 00       	callq  45 <__mq_timedsend_nocancel+0x3a>
  45:	48 89 d0             	mov    %rdx,%rax
  48:	48 83 c4 08          	add    $0x8,%rsp
  4c:	48 3d 01 f0 ff ff    	cmp    $0xfffffffffffff001,%rax
  52:	0f 83 00 00 00 00    	jae    58 <__mq_timedsend_nocancel+0x4d>
  58:	c3                   	retq   

mq_timedreceive.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__GI_mq_timedreceive>:
   0:	64 83 3c 25 18 00 00 	cmpl   $0x0,%fs:0x18
   7:	00 00 
   9:	75 17                	jne    22 <__mq_timedreceive_nocancel+0x17>

000000000000000b <__mq_timedreceive_nocancel>:
   b:	49 89 ca             	mov    %rcx,%r10
   e:	b8 f3 00 00 00       	mov    $0xf3,%eax
  13:	0f 05                	syscall 
  15:	48 3d 01 f0 ff ff    	cmp    $0xfffffffffffff001,%rax
  1b:	0f 83 00 00 00 00    	jae    21 <__mq_timedreceive_nocancel+0x16>
  21:	c3                   	retq   
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	e8 00 00 00 00       	callq  2b <__mq_timedreceive_nocancel+0x20>
  2b:	48 89 04 24          	mov    %rax,(%rsp)
  2f:	49 89 ca             	mov    %rcx,%r10
  32:	b8 f3 00 00 00       	mov    $0xf3,%eax
  37:	0f 05                	syscall 
  39:	48 8b 3c 24          	mov    (%rsp),%rdi
  3d:	48 89 c2             	mov    %rax,%rdx
  40:	e8 00 00 00 00       	callq  45 <__mq_timedreceive_nocancel+0x3a>
  45:	48 89 d0             	mov    %rdx,%rax
  48:	48 83 c4 08          	add    $0x8,%rsp
  4c:	48 3d 01 f0 ff ff    	cmp    $0xfffffffffffff001,%rax
  52:	0f 83 00 00 00 00    	jae    58 <__mq_timedreceive_nocancel+0x4d>
  58:	c3                   	retq   

clock-compat.o:     file format elf64-x86-64


timer_routines.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <reset_helper_control>:
   0:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # a <reset_helper_control+0xa>
   7:	00 00 00 
   a:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 14 <reset_helper_control+0x14>
  11:	00 00 00 
  14:	c3                   	retq   
  15:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  1c:	00 00 00 00 

0000000000000020 <timer_helper_thread>:
  20:	53                   	push   %rbx
  21:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp
  28:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  2d:	e8 00 00 00 00       	callq  32 <timer_helper_thread+0x12>
  32:	b8 00 00 00 80       	mov    $0x80000000,%eax
  37:	48 09 44 24 10       	or     %rax,0x10(%rsp)
  3c:	0f 1f 40 00          	nopl   0x0(%rax)
  40:	e8 00 00 00 00       	callq  45 <timer_helper_thread+0x25>
  45:	b9 80 00 00 00       	mov    $0x80,%ecx
  4a:	41 89 c0             	mov    %eax,%r8d
  4d:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  53:	31 d2                	xor    %edx,%edx
  55:	48 8d b4 24 90 00 00 	lea    0x90(%rsp),%rsi
  5c:	00 
  5d:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  62:	89 c8                	mov    %ecx,%eax
  64:	0f 05                	syscall 
  66:	48 3d 00 f0 ff ff    	cmp    $0xfffffffffffff000,%rax
  6c:	48 89 c3             	mov    %rax,%rbx
  6f:	0f 87 9c 00 00 00    	ja     111 <timer_helper_thread+0xf1>
  75:	44 89 c7             	mov    %r8d,%edi
  78:	e8 00 00 00 00       	callq  7d <timer_helper_thread+0x5d>
  7d:	85 db                	test   %ebx,%ebx
  7f:	7e bf                	jle    40 <timer_helper_thread+0x20>
  81:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
  88:	83 f8 fe             	cmp    $0xfffffffe,%eax
  8b:	74 13                	je     a0 <timer_helper_thread+0x80>
  8d:	83 f8 fa             	cmp    $0xfffffffa,%eax
  90:	75 ae                	jne    40 <timer_helper_thread+0x20>
  92:	31 ff                	xor    %edi,%edi
  94:	e8 00 00 00 00       	callq  99 <timer_helper_thread+0x79>
  99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  a0:	bf 00 00 00 00       	mov    $0x0,%edi
  a5:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
  ac:	00 
  ad:	e8 00 00 00 00       	callq  b2 <timer_helper_thread+0x92>
  b2:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b9 <timer_helper_thread+0x99>
  b9:	48 85 c0             	test   %rax,%rax
  bc:	75 0b                	jne    c9 <timer_helper_thread+0xa9>
  be:	eb 42                	jmp    102 <timer_helper_thread+0xe2>
  c0:	48 8b 40 50          	mov    0x50(%rax),%rax
  c4:	48 85 c0             	test   %rax,%rax
  c7:	74 39                	je     102 <timer_helper_thread+0xe2>
  c9:	48 39 c3             	cmp    %rax,%rbx
  cc:	75 f2                	jne    c0 <timer_helper_thread+0xa0>
  ce:	bf 10 00 00 00       	mov    $0x10,%edi
  d3:	e8 00 00 00 00       	callq  d8 <timer_helper_thread+0xb8>
  d8:	48 85 c0             	test   %rax,%rax
  db:	74 25                	je     102 <timer_helper_thread+0xe2>
  dd:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  e1:	48 8d 73 18          	lea    0x18(%rbx),%rsi
  e5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  ea:	48 89 c1             	mov    %rax,%rcx
  ed:	48 89 10             	mov    %rdx,(%rax)
  f0:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
  f8:	ba 00 00 00 00       	mov    $0x0,%edx
  fd:	e8 00 00 00 00       	callq  102 <timer_helper_thread+0xe2>
 102:	bf 00 00 00 00       	mov    $0x0,%edi
 107:	e8 00 00 00 00       	callq  10c <timer_helper_thread+0xec>
 10c:	e9 2f ff ff ff       	jmpq   40 <timer_helper_thread+0x20>
 111:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 118 <timer_helper_thread+0xf8>
 118:	f7 db                	neg    %ebx
 11a:	44 89 c7             	mov    %r8d,%edi
 11d:	64 89 18             	mov    %ebx,%fs:(%rax)
 120:	e8 00 00 00 00       	callq  125 <timer_helper_thread+0x105>
 125:	e9 16 ff ff ff       	jmpq   40 <timer_helper_thread+0x20>
 12a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000130 <timer_sigev_thread>:
 130:	41 54                	push   %r12
 132:	55                   	push   %rbp
 133:	53                   	push   %rbx
 134:	48 89 fb             	mov    %rdi,%rbx
 137:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
 13b:	48 89 e7             	mov    %rsp,%rdi
 13e:	e8 00 00 00 00       	callq  143 <timer_sigev_thread+0x13>
 143:	41 ba 08 00 00 00    	mov    $0x8,%r10d
 149:	31 d2                	xor    %edx,%edx
 14b:	48 89 e6             	mov    %rsp,%rsi
 14e:	bf 02 00 00 00       	mov    $0x2,%edi
 153:	b8 0e 00 00 00       	mov    $0xe,%eax
 158:	0f 05                	syscall 
 15a:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
 15e:	48 89 df             	mov    %rbx,%rdi
 161:	4c 8b 23             	mov    (%rbx),%r12
 164:	e8 00 00 00 00       	callq  169 <timer_sigev_thread+0x39>
 169:	48 89 ef             	mov    %rbp,%rdi
 16c:	41 ff d4             	callq  *%r12
 16f:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
 173:	31 c0                	xor    %eax,%eax
 175:	5b                   	pop    %rbx
 176:	5d                   	pop    %rbp
 177:	41 5c                	pop    %r12
 179:	c3                   	retq   
 17a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000180 <__start_helper_thread>:
 180:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
 187:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 18c:	e8 00 00 00 00       	callq  191 <__start_helper_thread+0x11>
 191:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 196:	e8 00 00 00 00       	callq  19b <__start_helper_thread+0x1b>
 19b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 1a0:	48 89 c6             	mov    %rax,%rsi
 1a3:	e8 00 00 00 00       	callq  1a8 <__start_helper_thread+0x28>
 1a8:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
 1ad:	e8 00 00 00 00       	callq  1b2 <__start_helper_thread+0x32>
 1b2:	b8 00 00 00 80       	mov    $0x80000000,%eax
 1b7:	41 ba 08 00 00 00    	mov    $0x8,%r10d
 1bd:	48 09 44 24 50       	or     %rax,0x50(%rsp)
 1c2:	48 8d 94 24 d0 00 00 	lea    0xd0(%rsp),%rdx
 1c9:	00 
 1ca:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
 1cf:	bf 02 00 00 00       	mov    $0x2,%edi
 1d4:	b8 0e 00 00 00       	mov    $0xe,%eax
 1d9:	0f 05                	syscall 
 1db:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
 1e0:	31 c9                	xor    %ecx,%ecx
 1e2:	ba 00 00 00 00       	mov    $0x0,%edx
 1e7:	48 89 e7             	mov    %rsp,%rdi
 1ea:	e8 00 00 00 00       	callq  1ef <__start_helper_thread+0x6f>
 1ef:	85 c0                	test   %eax,%eax
 1f1:	75 10                	jne    203 <__start_helper_thread+0x83>
 1f3:	48 8b 04 24          	mov    (%rsp),%rax
 1f7:	8b 80 d0 02 00 00    	mov    0x2d0(%rax),%eax
 1fd:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 203 <__start_helper_thread+0x83>
 203:	41 ba 08 00 00 00    	mov    $0x8,%r10d
 209:	31 d2                	xor    %edx,%edx
 20b:	48 8d b4 24 d0 00 00 	lea    0xd0(%rsp),%rsi
 212:	00 
 213:	bf 02 00 00 00       	mov    $0x2,%edi
 218:	b8 0e 00 00 00       	mov    $0xe,%eax
 21d:	0f 05                	syscall 
 21f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
 224:	e8 00 00 00 00       	callq  229 <__start_helper_thread+0xa9>
 229:	ba 00 00 00 00       	mov    $0x0,%edx
 22e:	31 f6                	xor    %esi,%esi
 230:	31 ff                	xor    %edi,%edi
 232:	e8 00 00 00 00       	callq  237 <__start_helper_thread+0xb7>
 237:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
 23e:	c3                   	retq   

librt-cancellation.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <__librt_enable_asynccancel>:
   0:	64 8b 04 25 08 03 00 	mov    %fs:0x308,%eax
   7:	00 
   8:	41 89 c3             	mov    %eax,%r11d
   b:	41 83 cb 02          	or     $0x2,%r11d
   f:	41 39 c3             	cmp    %eax,%r11d
  12:	74 17                	je     2b <__librt_enable_asynccancel+0x2b>
  14:	f0 64 44 0f b1 1c 25 	lock cmpxchg %r11d,%fs:0x308
  1b:	08 03 00 00 
  1f:	75 e7                	jne    8 <__librt_enable_asynccancel+0x8>
  21:	41 83 e3 bb          	and    $0xffffffbb,%r11d
  25:	41 83 fb 0a          	cmp    $0xa,%r11d
  29:	74 01                	je     2c <__librt_enable_asynccancel+0x2c>
  2b:	c3                   	retq   
  2c:	48 83 ec 08          	sub    $0x8,%rsp
  30:	64 48 c7 04 25 30 06 	movq   $0xffffffffffffffff,%fs:0x630
  37:	00 00 ff ff ff ff 
  3d:	f0 64 83 0c 25 08 03 	lock orl $0x10,%fs:0x308
  44:	00 00 10 
  47:	64 48 8b 3c 25 00 03 	mov    %fs:0x300,%rdi
  4e:	00 00 
  50:	e8 00 00 00 00       	callq  55 <__librt_enable_asynccancel+0x55>
  55:	f4                   	hlt    
  56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  5d:	00 00 00 

0000000000000060 <__librt_disable_asynccancel>:
  60:	f7 c7 02 00 00 00    	test   $0x2,%edi
  66:	75 27                	jne    8f <__librt_disable_asynccancel+0x2f>
  68:	64 8b 04 25 08 03 00 	mov    %fs:0x308,%eax
  6f:	00 
  70:	41 89 c3             	mov    %eax,%r11d
  73:	41 83 e3 fd          	and    $0xfffffffd,%r11d
  77:	f0 64 44 0f b1 1c 25 	lock cmpxchg %r11d,%fs:0x308
  7e:	08 03 00 00 
  82:	75 ec                	jne    70 <__librt_disable_asynccancel+0x10>
  84:	44 89 d8             	mov    %r11d,%eax
  87:	83 e0 0c             	and    $0xc,%eax
  8a:	83 f8 04             	cmp    $0x4,%eax
  8d:	74 01                	je     90 <__librt_disable_asynccancel+0x30>
  8f:	c3                   	retq   
  90:	64 48 8b 3c 25 00 00 	mov    %fs:0x0,%rdi
  97:	00 00 
  99:	b8 ca 00 00 00       	mov    $0xca,%eax
  9e:	4d 31 d2             	xor    %r10,%r10
  a1:	48 81 c7 08 03 00 00 	add    $0x308,%rdi
  a8:	be 80 00 00 00       	mov    $0x80,%esi
  ad:	0f 05                	syscall 
  af:	64 8b 04 25 08 03 00 	mov    %fs:0x308,%eax
  b6:	00 
  b7:	eb ce                	jmp    87 <__librt_disable_asynccancel+0x27>
